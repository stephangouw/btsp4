/*!
 * Bootstrap v4.0.0-alpha.2 (http://getbootstrap.com)
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery");

+function(a) {
    var b = a.fn.jquery.split(" ")[0].split(".");
    if (b[0] < 2 && b[1] < 9 || 1 == b[0] && 9 == b[1] && b[2] < 1 || b[0] >= 3) throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v3.0.0");
}(jQuery), +function(a) {
    "use strict";
    function b(a, b) {
        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
        a.prototype = Object.create(b && b.prototype, {
            constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b);
    }
    function c(a, b) {
        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function");
    }
    var d = function(a, b, c) {
        for (var d = !0; d; ) {
            var e = a, f = b, g = c;
            d = !1, null === e && (e = Function.prototype);
            var h = Object.getOwnPropertyDescriptor(e, f);
            if (void 0 !== h) {
                if ("value" in h) return h.value;
                var i = h.get;
                if (void 0 === i) return;
                return i.call(g);
            }
            var j = Object.getPrototypeOf(e);
            if (null === j) return;
            a = j, b = f, c = g, d = !0, h = j = void 0;
        }
    }, e = function() {
        function a(a, b) {
            for (var c = 0; c < b.length; c++) {
                var d = b[c];
                d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), 
                Object.defineProperty(a, d.key, d);
            }
        }
        return function(b, c, d) {
            return c && a(b.prototype, c), d && a(b, d), b;
        };
    }(), f = function(a) {
        function b(a) {
            return {}.toString.call(a).match(/\s([a-zA-Z]+)/)[1].toLowerCase();
        }
        function c(a) {
            return (a[0] || a).nodeType;
        }
        function d() {
            return {
                bindType: h.end,
                delegateType: h.end,
                handle: function(b) {
                    return a(b.target).is(this) ? b.handleObj.handler.apply(this, arguments) : void 0;
                }
            };
        }
        function e() {
            if (window.QUnit) return !1;
            var a = document.createElement("bootstrap");
            for (var b in i) if (void 0 !== a.style[b]) return {
                end: i[b]
            };
            return !1;
        }
        function f(b) {
            var c = this, d = !1;
            return a(this).one(j.TRANSITION_END, function() {
                d = !0;
            }), setTimeout(function() {
                d || j.triggerTransitionEnd(c);
            }, b), this;
        }
        function g() {
            h = e(), a.fn.emulateTransitionEnd = f, j.supportsTransitionEnd() && (a.event.special[j.TRANSITION_END] = d());
        }
        var h = !1, i = {
            WebkitTransition: "webkitTransitionEnd",
            MozTransition: "transitionend",
            OTransition: "oTransitionEnd otransitionend",
            transition: "transitionend"
        }, j = {
            TRANSITION_END: "bsTransitionEnd",
            getUID: function(a) {
                do a += ~~(1e6 * Math.random()); while (document.getElementById(a));
                return a;
            },
            getSelectorFromElement: function(a) {
                var b = a.getAttribute("data-target");
                return b || (b = a.getAttribute("href") || "", b = /^#[a-z]/i.test(b) ? b : null), 
                b;
            },
            reflow: function(a) {
                new Function("bs", "return bs")(a.offsetHeight);
            },
            triggerTransitionEnd: function(b) {
                a(b).trigger(h.end);
            },
            supportsTransitionEnd: function() {
                return Boolean(h);
            },
            typeCheckConfig: function(a, d, e) {
                for (var f in e) if (e.hasOwnProperty(f)) {
                    var g = e[f], h = d[f], i = void 0;
                    if (i = h && c(h) ? "element" : b(h), !new RegExp(g).test(i)) throw new Error(a.toUpperCase() + ": " + ('Option "' + f + '" provided type "' + i + '" ') + ('but expected type "' + g + '".'));
                }
            }
        };
        return g(), j;
    }(jQuery), g = (function(a) {
        var b = "alert", d = "4.0.0-alpha", g = "bs.alert", h = "." + g, i = ".data-api", j = a.fn[b], k = 150, l = {
            DISMISS: '[data-dismiss="alert"]'
        }, m = {
            CLOSE: "close" + h,
            CLOSED: "closed" + h,
            CLICK_DATA_API: "click" + h + i
        }, n = {
            ALERT: "alert",
            FADE: "fade",
            IN: "in"
        }, o = function() {
            function b(a) {
                c(this, b), this._element = a;
            }
            return e(b, [ {
                key: "close",
                value: function(a) {
                    a = a || this._element;
                    var b = this._getRootElement(a), c = this._triggerCloseEvent(b);
                    c.isDefaultPrevented() || this._removeElement(b);
                }
            }, {
                key: "dispose",
                value: function() {
                    a.removeData(this._element, g), this._element = null;
                }
            }, {
                key: "_getRootElement",
                value: function(b) {
                    var c = f.getSelectorFromElement(b), d = !1;
                    return c && (d = a(c)[0]), d || (d = a(b).closest("." + n.ALERT)[0]), d;
                }
            }, {
                key: "_triggerCloseEvent",
                value: function(b) {
                    var c = a.Event(m.CLOSE);
                    return a(b).trigger(c), c;
                }
            }, {
                key: "_removeElement",
                value: function(b) {
                    return a(b).removeClass(n.IN), f.supportsTransitionEnd() && a(b).hasClass(n.FADE) ? void a(b).one(f.TRANSITION_END, a.proxy(this._destroyElement, this, b)).emulateTransitionEnd(k) : void this._destroyElement(b);
                }
            }, {
                key: "_destroyElement",
                value: function(b) {
                    a(b).detach().trigger(m.CLOSED).remove();
                }
            } ], [ {
                key: "_jQueryInterface",
                value: function(c) {
                    return this.each(function() {
                        var d = a(this), e = d.data(g);
                        e || (e = new b(this), d.data(g, e)), "close" === c && e[c](this);
                    });
                }
            }, {
                key: "_handleDismiss",
                value: function(a) {
                    return function(b) {
                        b && b.preventDefault(), a.close(this);
                    };
                }
            }, {
                key: "VERSION",
                get: function() {
                    return d;
                }
            } ]), b;
        }();
        return a(document).on(m.CLICK_DATA_API, l.DISMISS, o._handleDismiss(new o())), a.fn[b] = o._jQueryInterface, 
        a.fn[b].Constructor = o, a.fn[b].noConflict = function() {
            return a.fn[b] = j, o._jQueryInterface;
        }, o;
    }(jQuery), function(a) {
        var b = "button", d = "4.0.0-alpha", f = "bs.button", g = "." + f, h = ".data-api", i = a.fn[b], j = {
            ACTIVE: "active",
            BUTTON: "btn",
            FOCUS: "focus"
        }, k = {
            DATA_TOGGLE_CARROT: '[data-toggle^="button"]',
            DATA_TOGGLE: '[data-toggle="buttons"]',
            INPUT: "input",
            ACTIVE: ".active",
            BUTTON: ".btn"
        }, l = {
            CLICK_DATA_API: "click" + g + h,
            FOCUS_BLUR_DATA_API: "focus" + g + h + " " + ("blur" + g + h)
        }, m = function() {
            function b(a) {
                c(this, b), this._element = a;
            }
            return e(b, [ {
                key: "toggle",
                value: function() {
                    var b = !0, c = a(this._element).closest(k.DATA_TOGGLE)[0];
                    if (c) {
                        var d = a(this._element).find(k.INPUT)[0];
                        if (d) {
                            if ("radio" === d.type) if (d.checked && a(this._element).hasClass(j.ACTIVE)) b = !1; else {
                                var e = a(c).find(k.ACTIVE)[0];
                                e && a(e).removeClass(j.ACTIVE);
                            }
                            b && (d.checked = !a(this._element).hasClass(j.ACTIVE), a(this._element).trigger("change"));
                        }
                    } else this._element.setAttribute("aria-pressed", !a(this._element).hasClass(j.ACTIVE));
                    b && a(this._element).toggleClass(j.ACTIVE);
                }
            }, {
                key: "dispose",
                value: function() {
                    a.removeData(this._element, f), this._element = null;
                }
            } ], [ {
                key: "_jQueryInterface",
                value: function(c) {
                    return this.each(function() {
                        var d = a(this).data(f);
                        d || (d = new b(this), a(this).data(f, d)), "toggle" === c && d[c]();
                    });
                }
            }, {
                key: "VERSION",
                get: function() {
                    return d;
                }
            } ]), b;
        }();
        return a(document).on(l.CLICK_DATA_API, k.DATA_TOGGLE_CARROT, function(b) {
            b.preventDefault();
            var c = b.target;
            a(c).hasClass(j.BUTTON) || (c = a(c).closest(k.BUTTON)), m._jQueryInterface.call(a(c), "toggle");
        }).on(l.FOCUS_BLUR_DATA_API, k.DATA_TOGGLE_CARROT, function(b) {
            var c = a(b.target).closest(k.BUTTON)[0];
            a(c).toggleClass(j.FOCUS, /^focus(in)?$/.test(b.type));
        }), a.fn[b] = m._jQueryInterface, a.fn[b].Constructor = m, a.fn[b].noConflict = function() {
            return a.fn[b] = i, m._jQueryInterface;
        }, m;
    }(jQuery), function(a) {
        var b = "carousel", d = "4.0.0-alpha", g = "bs.carousel", h = "." + g, i = ".data-api", j = a.fn[b], k = 600, l = {
            interval: 5e3,
            keyboard: !0,
            slide: !1,
            pause: "hover",
            wrap: !0
        }, m = {
            interval: "(number|boolean)",
            keyboard: "boolean",
            slide: "(boolean|string)",
            pause: "(string|boolean)",
            wrap: "boolean"
        }, n = {
            NEXT: "next",
            PREVIOUS: "prev"
        }, o = {
            SLIDE: "slide" + h,
            SLID: "slid" + h,
            KEYDOWN: "keydown" + h,
            MOUSEENTER: "mouseenter" + h,
            MOUSELEAVE: "mouseleave" + h,
            LOAD_DATA_API: "load" + h + i,
            CLICK_DATA_API: "click" + h + i
        }, p = {
            CAROUSEL: "carousel",
            ACTIVE: "active",
            SLIDE: "slide",
            RIGHT: "right",
            LEFT: "left",
            ITEM: "carousel-item"
        }, q = {
            ACTIVE: ".active",
            ACTIVE_ITEM: ".active.carousel-item",
            ITEM: ".carousel-item",
            NEXT_PREV: ".next, .prev",
            INDICATORS: ".carousel-indicators",
            DATA_SLIDE: "[data-slide], [data-slide-to]",
            DATA_RIDE: '[data-ride="carousel"]'
        }, r = function() {
            function i(b, d) {
                c(this, i), this._items = null, this._interval = null, this._activeElement = null, 
                this._isPaused = !1, this._isSliding = !1, this._config = this._getConfig(d), this._element = a(b)[0], 
                this._indicatorsElement = a(this._element).find(q.INDICATORS)[0], this._addEventListeners();
            }
            return e(i, [ {
                key: "next",
                value: function() {
                    this._isSliding || this._slide(n.NEXT);
                }
            }, {
                key: "nextWhenVisible",
                value: function() {
                    document.hidden || this.next();
                }
            }, {
                key: "prev",
                value: function() {
                    this._isSliding || this._slide(n.PREVIOUS);
                }
            }, {
                key: "pause",
                value: function(b) {
                    b || (this._isPaused = !0), a(this._element).find(q.NEXT_PREV)[0] && f.supportsTransitionEnd() && (f.triggerTransitionEnd(this._element), 
                    this.cycle(!0)), clearInterval(this._interval), this._interval = null;
                }
            }, {
                key: "cycle",
                value: function(b) {
                    b || (this._isPaused = !1), this._interval && (clearInterval(this._interval), this._interval = null), 
                    this._config.interval && !this._isPaused && (this._interval = setInterval(a.proxy(document.visibilityState ? this.nextWhenVisible : this.next, this), this._config.interval));
                }
            }, {
                key: "to",
                value: function(b) {
                    var c = this;
                    this._activeElement = a(this._element).find(q.ACTIVE_ITEM)[0];
                    var d = this._getItemIndex(this._activeElement);
                    if (!(b > this._items.length - 1 || 0 > b)) {
                        if (this._isSliding) return void a(this._element).one(o.SLID, function() {
                            return c.to(b);
                        });
                        if (d === b) return this.pause(), void this.cycle();
                        var e = b > d ? n.NEXT : n.PREVIOUS;
                        this._slide(e, this._items[b]);
                    }
                }
            }, {
                key: "dispose",
                value: function() {
                    a(this._element).off(h), a.removeData(this._element, g), this._items = null, this._config = null, 
                    this._element = null, this._interval = null, this._isPaused = null, this._isSliding = null, 
                    this._activeElement = null, this._indicatorsElement = null;
                }
            }, {
                key: "_getConfig",
                value: function(c) {
                    return c = a.extend({}, l, c), f.typeCheckConfig(b, c, m), c;
                }
            }, {
                key: "_addEventListeners",
                value: function() {
                    this._config.keyboard && a(this._element).on(o.KEYDOWN, a.proxy(this._keydown, this)), 
                    "hover" !== this._config.pause || "ontouchstart" in document.documentElement || a(this._element).on(o.MOUSEENTER, a.proxy(this.pause, this)).on(o.MOUSELEAVE, a.proxy(this.cycle, this));
                }
            }, {
                key: "_keydown",
                value: function(a) {
                    if (a.preventDefault(), !/input|textarea/i.test(a.target.tagName)) switch (a.which) {
                      case 37:
                        this.prev();
                        break;

                      case 39:
                        this.next();
                        break;

                      default:
                        return;
                    }
                }
            }, {
                key: "_getItemIndex",
                value: function(b) {
                    return this._items = a.makeArray(a(b).parent().find(q.ITEM)), this._items.indexOf(b);
                }
            }, {
                key: "_getItemByDirection",
                value: function(a, b) {
                    var c = a === n.NEXT, d = a === n.PREVIOUS, e = this._getItemIndex(b), f = this._items.length - 1, g = d && 0 === e || c && e === f;
                    if (g && !this._config.wrap) return b;
                    var h = a === n.PREVIOUS ? -1 : 1, i = (e + h) % this._items.length;
                    return -1 === i ? this._items[this._items.length - 1] : this._items[i];
                }
            }, {
                key: "_triggerSlideEvent",
                value: function(b, c) {
                    var d = a.Event(o.SLIDE, {
                        relatedTarget: b,
                        direction: c
                    });
                    return a(this._element).trigger(d), d;
                }
            }, {
                key: "_setActiveIndicatorElement",
                value: function(b) {
                    if (this._indicatorsElement) {
                        a(this._indicatorsElement).find(q.ACTIVE).removeClass(p.ACTIVE);
                        var c = this._indicatorsElement.children[this._getItemIndex(b)];
                        c && a(c).addClass(p.ACTIVE);
                    }
                }
            }, {
                key: "_slide",
                value: function(b, c) {
                    var d = this, e = a(this._element).find(q.ACTIVE_ITEM)[0], g = c || e && this._getItemByDirection(b, e), h = Boolean(this._interval), i = b === n.NEXT ? p.LEFT : p.RIGHT;
                    if (g && a(g).hasClass(p.ACTIVE)) return void (this._isSliding = !1);
                    var j = this._triggerSlideEvent(g, i);
                    if (!j.isDefaultPrevented() && e && g) {
                        this._isSliding = !0, h && this.pause(), this._setActiveIndicatorElement(g);
                        var l = a.Event(o.SLID, {
                            relatedTarget: g,
                            direction: i
                        });
                        f.supportsTransitionEnd() && a(this._element).hasClass(p.SLIDE) ? (a(g).addClass(b), 
                        f.reflow(g), a(e).addClass(i), a(g).addClass(i), a(e).one(f.TRANSITION_END, function() {
                            a(g).removeClass(i).removeClass(b), a(g).addClass(p.ACTIVE), a(e).removeClass(p.ACTIVE).removeClass(b).removeClass(i), 
                            d._isSliding = !1, setTimeout(function() {
                                return a(d._element).trigger(l);
                            }, 0);
                        }).emulateTransitionEnd(k)) : (a(e).removeClass(p.ACTIVE), a(g).addClass(p.ACTIVE), 
                        this._isSliding = !1, a(this._element).trigger(l)), h && this.cycle();
                    }
                }
            } ], [ {
                key: "_jQueryInterface",
                value: function(b) {
                    return this.each(function() {
                        var c = a(this).data(g), d = a.extend({}, l, a(this).data());
                        "object" == typeof b && a.extend(d, b);
                        var e = "string" == typeof b ? b : d.slide;
                        if (c || (c = new i(this, d), a(this).data(g, c)), "number" == typeof b) c.to(b); else if ("string" == typeof e) {
                            if (void 0 === c[e]) throw new Error('No method named "' + e + '"');
                            c[e]();
                        } else d.interval && (c.pause(), c.cycle());
                    });
                }
            }, {
                key: "_dataApiClickHandler",
                value: function(b) {
                    var c = f.getSelectorFromElement(this);
                    if (c) {
                        var d = a(c)[0];
                        if (d && a(d).hasClass(p.CAROUSEL)) {
                            var e = a.extend({}, a(d).data(), a(this).data()), h = this.getAttribute("data-slide-to");
                            h && (e.interval = !1), i._jQueryInterface.call(a(d), e), h && a(d).data(g).to(h), 
                            b.preventDefault();
                        }
                    }
                }
            }, {
                key: "VERSION",
                get: function() {
                    return d;
                }
            }, {
                key: "Default",
                get: function() {
                    return l;
                }
            } ]), i;
        }();
        return a(document).on(o.CLICK_DATA_API, q.DATA_SLIDE, r._dataApiClickHandler), a(window).on(o.LOAD_DATA_API, function() {
            a(q.DATA_RIDE).each(function() {
                var b = a(this);
                r._jQueryInterface.call(b, b.data());
            });
        }), a.fn[b] = r._jQueryInterface, a.fn[b].Constructor = r, a.fn[b].noConflict = function() {
            return a.fn[b] = j, r._jQueryInterface;
        }, r;
    }(jQuery), function(a) {
        var b = "collapse", d = "4.0.0-alpha", g = "bs.collapse", h = "." + g, i = ".data-api", j = a.fn[b], k = 600, l = {
            toggle: !0,
            parent: ""
        }, m = {
            toggle: "boolean",
            parent: "string"
        }, n = {
            SHOW: "show" + h,
            SHOWN: "shown" + h,
            HIDE: "hide" + h,
            HIDDEN: "hidden" + h,
            CLICK_DATA_API: "click" + h + i
        }, o = {
            IN: "in",
            COLLAPSE: "collapse",
            COLLAPSING: "collapsing",
            COLLAPSED: "collapsed"
        }, p = {
            WIDTH: "width",
            HEIGHT: "height"
        }, q = {
            ACTIVES: ".panel > .in, .panel > .collapsing",
            DATA_TOGGLE: '[data-toggle="collapse"]'
        }, r = function() {
            function h(b, d) {
                c(this, h), this._isTransitioning = !1, this._element = b, this._config = this._getConfig(d), 
                this._triggerArray = a.makeArray(a('[data-toggle="collapse"][href="#' + b.id + '"],' + ('[data-toggle="collapse"][data-target="#' + b.id + '"]'))), 
                this._parent = this._config.parent ? this._getParent() : null, this._config.parent || this._addAriaAndCollapsedClass(this._element, this._triggerArray), 
                this._config.toggle && this.toggle();
            }
            return e(h, [ {
                key: "toggle",
                value: function() {
                    a(this._element).hasClass(o.IN) ? this.hide() : this.show();
                }
            }, {
                key: "show",
                value: function() {
                    var b = this;
                    if (!this._isTransitioning && !a(this._element).hasClass(o.IN)) {
                        var c = void 0, d = void 0;
                        if (this._parent && (c = a.makeArray(a(q.ACTIVES)), c.length || (c = null)), !(c && (d = a(c).data(g), 
                        d && d._isTransitioning))) {
                            var e = a.Event(n.SHOW);
                            if (a(this._element).trigger(e), !e.isDefaultPrevented()) {
                                c && (h._jQueryInterface.call(a(c), "hide"), d || a(c).data(g, null));
                                var i = this._getDimension();
                                a(this._element).removeClass(o.COLLAPSE).addClass(o.COLLAPSING), this._element.style[i] = 0, 
                                this._element.setAttribute("aria-expanded", !0), this._triggerArray.length && a(this._triggerArray).removeClass(o.COLLAPSED).attr("aria-expanded", !0), 
                                this.setTransitioning(!0);
                                var j = function() {
                                    a(b._element).removeClass(o.COLLAPSING).addClass(o.COLLAPSE).addClass(o.IN), b._element.style[i] = "", 
                                    b.setTransitioning(!1), a(b._element).trigger(n.SHOWN);
                                };
                                if (!f.supportsTransitionEnd()) return void j();
                                var l = i[0].toUpperCase() + i.slice(1), m = "scroll" + l;
                                a(this._element).one(f.TRANSITION_END, j).emulateTransitionEnd(k), this._element.style[i] = this._element[m] + "px";
                            }
                        }
                    }
                }
            }, {
                key: "hide",
                value: function() {
                    var b = this;
                    if (!this._isTransitioning && a(this._element).hasClass(o.IN)) {
                        var c = a.Event(n.HIDE);
                        if (a(this._element).trigger(c), !c.isDefaultPrevented()) {
                            var d = this._getDimension(), e = d === p.WIDTH ? "offsetWidth" : "offsetHeight";
                            this._element.style[d] = this._element[e] + "px", f.reflow(this._element), a(this._element).addClass(o.COLLAPSING).removeClass(o.COLLAPSE).removeClass(o.IN), 
                            this._element.setAttribute("aria-expanded", !1), this._triggerArray.length && a(this._triggerArray).addClass(o.COLLAPSED).attr("aria-expanded", !1), 
                            this.setTransitioning(!0);
                            var g = function() {
                                b.setTransitioning(!1), a(b._element).removeClass(o.COLLAPSING).addClass(o.COLLAPSE).trigger(n.HIDDEN);
                            };
                            return this._element.style[d] = 0, f.supportsTransitionEnd() ? void a(this._element).one(f.TRANSITION_END, g).emulateTransitionEnd(k) : void g();
                        }
                    }
                }
            }, {
                key: "setTransitioning",
                value: function(a) {
                    this._isTransitioning = a;
                }
            }, {
                key: "dispose",
                value: function() {
                    a.removeData(this._element, g), this._config = null, this._parent = null, this._element = null, 
                    this._triggerArray = null, this._isTransitioning = null;
                }
            }, {
                key: "_getConfig",
                value: function(c) {
                    return c = a.extend({}, l, c), c.toggle = Boolean(c.toggle), f.typeCheckConfig(b, c, m), 
                    c;
                }
            }, {
                key: "_getDimension",
                value: function() {
                    var b = a(this._element).hasClass(p.WIDTH);
                    return b ? p.WIDTH : p.HEIGHT;
                }
            }, {
                key: "_getParent",
                value: function() {
                    var b = this, c = a(this._config.parent)[0], d = '[data-toggle="collapse"][data-parent="' + this._config.parent + '"]';
                    return a(c).find(d).each(function(a, c) {
                        b._addAriaAndCollapsedClass(h._getTargetFromElement(c), [ c ]);
                    }), c;
                }
            }, {
                key: "_addAriaAndCollapsedClass",
                value: function(b, c) {
                    if (b) {
                        var d = a(b).hasClass(o.IN);
                        b.setAttribute("aria-expanded", d), c.length && a(c).toggleClass(o.COLLAPSED, !d).attr("aria-expanded", d);
                    }
                }
            } ], [ {
                key: "_getTargetFromElement",
                value: function(b) {
                    var c = f.getSelectorFromElement(b);
                    return c ? a(c)[0] : null;
                }
            }, {
                key: "_jQueryInterface",
                value: function(b) {
                    return this.each(function() {
                        var c = a(this), d = c.data(g), e = a.extend({}, l, c.data(), "object" == typeof b && b);
                        if (!d && e.toggle && /show|hide/.test(b) && (e.toggle = !1), d || (d = new h(this, e), 
                        c.data(g, d)), "string" == typeof b) {
                            if (void 0 === d[b]) throw new Error('No method named "' + b + '"');
                            d[b]();
                        }
                    });
                }
            }, {
                key: "VERSION",
                get: function() {
                    return d;
                }
            }, {
                key: "Default",
                get: function() {
                    return l;
                }
            } ]), h;
        }();
        return a(document).on(n.CLICK_DATA_API, q.DATA_TOGGLE, function(b) {
            b.preventDefault();
            var c = r._getTargetFromElement(this), d = a(c).data(g), e = d ? "toggle" : a(this).data();
            r._jQueryInterface.call(a(c), e);
        }), a.fn[b] = r._jQueryInterface, a.fn[b].Constructor = r, a.fn[b].noConflict = function() {
            return a.fn[b] = j, r._jQueryInterface;
        }, r;
    }(jQuery), function(a) {
        var b = "dropdown", d = "4.0.0-alpha", g = "bs.dropdown", h = "." + g, i = ".data-api", j = a.fn[b], k = {
            HIDE: "hide" + h,
            HIDDEN: "hidden" + h,
            SHOW: "show" + h,
            SHOWN: "shown" + h,
            CLICK: "click" + h,
            CLICK_DATA_API: "click" + h + i,
            KEYDOWN_DATA_API: "keydown" + h + i
        }, l = {
            BACKDROP: "dropdown-backdrop",
            DISABLED: "disabled",
            OPEN: "open"
        }, m = {
            BACKDROP: ".dropdown-backdrop",
            DATA_TOGGLE: '[data-toggle="dropdown"]',
            FORM_CHILD: ".dropdown form",
            ROLE_MENU: '[role="menu"]',
            ROLE_LISTBOX: '[role="listbox"]',
            NAVBAR_NAV: ".navbar-nav",
            VISIBLE_ITEMS: '[role="menu"] li:not(.disabled) a, [role="listbox"] li:not(.disabled) a'
        }, n = function() {
            function b(a) {
                c(this, b), this._element = a, this._addEventListeners();
            }
            return e(b, [ {
                key: "toggle",
                value: function() {
                    if (this.disabled || a(this).hasClass(l.DISABLED)) return !1;
                    var c = b._getParentFromElement(this), d = a(c).hasClass(l.OPEN);
                    if (b._clearMenus(), d) return !1;
                    if ("ontouchstart" in document.documentElement && !a(c).closest(m.NAVBAR_NAV).length) {
                        var e = document.createElement("div");
                        e.className = l.BACKDROP, a(e).insertBefore(this), a(e).on("click", b._clearMenus);
                    }
                    var f = {
                        relatedTarget: this
                    }, g = a.Event(k.SHOW, f);
                    return a(c).trigger(g), g.isDefaultPrevented() ? !1 : (this.focus(), this.setAttribute("aria-expanded", "true"), 
                    a(c).toggleClass(l.OPEN), a(c).trigger(a.Event(k.SHOWN, f)), !1);
                }
            }, {
                key: "dispose",
                value: function() {
                    a.removeData(this._element, g), a(this._element).off(h), this._element = null;
                }
            }, {
                key: "_addEventListeners",
                value: function() {
                    a(this._element).on(k.CLICK, this.toggle);
                }
            } ], [ {
                key: "_jQueryInterface",
                value: function(c) {
                    return this.each(function() {
                        var d = a(this).data(g);
                        if (d || a(this).data(g, d = new b(this)), "string" == typeof c) {
                            if (void 0 === d[c]) throw new Error('No method named "' + c + '"');
                            d[c].call(this);
                        }
                    });
                }
            }, {
                key: "_clearMenus",
                value: function(c) {
                    if (!c || 3 !== c.which) {
                        var d = a(m.BACKDROP)[0];
                        d && d.parentNode.removeChild(d);
                        for (var e = a.makeArray(a(m.DATA_TOGGLE)), f = 0; f < e.length; f++) {
                            var g = b._getParentFromElement(e[f]), h = {
                                relatedTarget: e[f]
                            };
                            if (a(g).hasClass(l.OPEN) && !(c && "click" === c.type && /input|textarea/i.test(c.target.tagName) && a.contains(g, c.target))) {
                                var i = a.Event(k.HIDE, h);
                                a(g).trigger(i), i.isDefaultPrevented() || (e[f].setAttribute("aria-expanded", "false"), 
                                a(g).removeClass(l.OPEN).trigger(a.Event(k.HIDDEN, h)));
                            }
                        }
                    }
                }
            }, {
                key: "_getParentFromElement",
                value: function(b) {
                    var c = void 0, d = f.getSelectorFromElement(b);
                    return d && (c = a(d)[0]), c || b.parentNode;
                }
            }, {
                key: "_dataApiKeydownHandler",
                value: function(c) {
                    if (/(38|40|27|32)/.test(c.which) && !/input|textarea/i.test(c.target.tagName) && (c.preventDefault(), 
                    c.stopPropagation(), !this.disabled && !a(this).hasClass(l.DISABLED))) {
                        var d = b._getParentFromElement(this), e = a(d).hasClass(l.OPEN);
                        if (!e && 27 !== c.which || e && 27 === c.which) {
                            if (27 === c.which) {
                                var f = a(d).find(m.DATA_TOGGLE)[0];
                                a(f).trigger("focus");
                            }
                            return void a(this).trigger("click");
                        }
                        var g = a.makeArray(a(m.VISIBLE_ITEMS));
                        if (g = g.filter(function(a) {
                            return a.offsetWidth || a.offsetHeight;
                        }), g.length) {
                            var h = g.indexOf(c.target);
                            38 === c.which && h > 0 && h--, 40 === c.which && h < g.length - 1 && h++, ~h || (h = 0), 
                            g[h].focus();
                        }
                    }
                }
            }, {
                key: "VERSION",
                get: function() {
                    return d;
                }
            } ]), b;
        }();
        return a(document).on(k.KEYDOWN_DATA_API, m.DATA_TOGGLE, n._dataApiKeydownHandler).on(k.KEYDOWN_DATA_API, m.ROLE_MENU, n._dataApiKeydownHandler).on(k.KEYDOWN_DATA_API, m.ROLE_LISTBOX, n._dataApiKeydownHandler).on(k.CLICK_DATA_API, n._clearMenus).on(k.CLICK_DATA_API, m.DATA_TOGGLE, n.prototype.toggle).on(k.CLICK_DATA_API, m.FORM_CHILD, function(a) {
            a.stopPropagation();
        }), a.fn[b] = n._jQueryInterface, a.fn[b].Constructor = n, a.fn[b].noConflict = function() {
            return a.fn[b] = j, n._jQueryInterface;
        }, n;
    }(jQuery), function(a) {
        var b = "modal", d = "4.0.0-alpha", g = "bs.modal", h = "." + g, i = ".data-api", j = a.fn[b], k = 300, l = 150, m = {
            backdrop: !0,
            keyboard: !0,
            focus: !0,
            show: !0
        }, n = {
            backdrop: "(boolean|string)",
            keyboard: "boolean",
            focus: "boolean",
            show: "boolean"
        }, o = {
            HIDE: "hide" + h,
            HIDDEN: "hidden" + h,
            SHOW: "show" + h,
            SHOWN: "shown" + h,
            FOCUSIN: "focusin" + h,
            RESIZE: "resize" + h,
            CLICK_DISMISS: "click.dismiss" + h,
            KEYDOWN_DISMISS: "keydown.dismiss" + h,
            MOUSEUP_DISMISS: "mouseup.dismiss" + h,
            MOUSEDOWN_DISMISS: "mousedown.dismiss" + h,
            CLICK_DATA_API: "click" + h + i
        }, p = {
            SCROLLBAR_MEASURER: "modal-scrollbar-measure",
            BACKDROP: "modal-backdrop",
            OPEN: "modal-open",
            FADE: "fade",
            IN: "in"
        }, q = {
            DIALOG: ".modal-dialog",
            DATA_TOGGLE: '[data-toggle="modal"]',
            DATA_DISMISS: '[data-dismiss="modal"]',
            FIXED_CONTENT: ".navbar-fixed-top, .navbar-fixed-bottom, .is-fixed"
        }, r = function() {
            function i(b, d) {
                c(this, i), this._config = this._getConfig(d), this._element = b, this._dialog = a(b).find(q.DIALOG)[0], 
                this._backdrop = null, this._isShown = !1, this._isBodyOverflowing = !1, this._ignoreBackdropClick = !1, 
                this._originalBodyPadding = 0, this._scrollbarWidth = 0;
            }
            return e(i, [ {
                key: "toggle",
                value: function(a) {
                    return this._isShown ? this.hide() : this.show(a);
                }
            }, {
                key: "show",
                value: function(b) {
                    var c = this, d = a.Event(o.SHOW, {
                        relatedTarget: b
                    });
                    a(this._element).trigger(d), this._isShown || d.isDefaultPrevented() || (this._isShown = !0, 
                    this._checkScrollbar(), this._setScrollbar(), a(document.body).addClass(p.OPEN), 
                    this._setEscapeEvent(), this._setResizeEvent(), a(this._element).on(o.CLICK_DISMISS, q.DATA_DISMISS, a.proxy(this.hide, this)), 
                    a(this._dialog).on(o.MOUSEDOWN_DISMISS, function() {
                        a(c._element).one(o.MOUSEUP_DISMISS, function(b) {
                            a(b.target).is(c._element) && (c._ignoreBackdropClick = !0);
                        });
                    }), this._showBackdrop(a.proxy(this._showElement, this, b)));
                }
            }, {
                key: "hide",
                value: function(b) {
                    b && b.preventDefault();
                    var c = a.Event(o.HIDE);
                    a(this._element).trigger(c), this._isShown && !c.isDefaultPrevented() && (this._isShown = !1, 
                    this._setEscapeEvent(), this._setResizeEvent(), a(document).off(o.FOCUSIN), a(this._element).removeClass(p.IN), 
                    a(this._element).off(o.CLICK_DISMISS), a(this._dialog).off(o.MOUSEDOWN_DISMISS), 
                    f.supportsTransitionEnd() && a(this._element).hasClass(p.FADE) ? a(this._element).one(f.TRANSITION_END, a.proxy(this._hideModal, this)).emulateTransitionEnd(k) : this._hideModal());
                }
            }, {
                key: "dispose",
                value: function() {
                    a.removeData(this._element, g), a(window).off(h), a(document).off(h), a(this._element).off(h), 
                    a(this._backdrop).off(h), this._config = null, this._element = null, this._dialog = null, 
                    this._backdrop = null, this._isShown = null, this._isBodyOverflowing = null, this._ignoreBackdropClick = null, 
                    this._originalBodyPadding = null, this._scrollbarWidth = null;
                }
            }, {
                key: "_getConfig",
                value: function(c) {
                    return c = a.extend({}, m, c), f.typeCheckConfig(b, c, n), c;
                }
            }, {
                key: "_showElement",
                value: function(b) {
                    var c = this, d = f.supportsTransitionEnd() && a(this._element).hasClass(p.FADE);
                    this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE || document.body.appendChild(this._element), 
                    this._element.style.display = "block", this._element.scrollTop = 0, d && f.reflow(this._element), 
                    a(this._element).addClass(p.IN), this._config.focus && this._enforceFocus();
                    var e = a.Event(o.SHOWN, {
                        relatedTarget: b
                    }), g = function() {
                        c._config.focus && c._element.focus(), a(c._element).trigger(e);
                    };
                    d ? a(this._dialog).one(f.TRANSITION_END, g).emulateTransitionEnd(k) : g();
                }
            }, {
                key: "_enforceFocus",
                value: function() {
                    var b = this;
                    a(document).off(o.FOCUSIN).on(o.FOCUSIN, function(c) {
                        b._element === c.target || a(b._element).has(c.target).length || b._element.focus();
                    });
                }
            }, {
                key: "_setEscapeEvent",
                value: function() {
                    var b = this;
                    this._isShown && this._config.keyboard ? a(this._element).on(o.KEYDOWN_DISMISS, function(a) {
                        27 === a.which && b.hide();
                    }) : this._isShown || a(this._element).off(o.KEYDOWN_DISMISS);
                }
            }, {
                key: "_setResizeEvent",
                value: function() {
                    this._isShown ? a(window).on(o.RESIZE, a.proxy(this._handleUpdate, this)) : a(window).off(o.RESIZE);
                }
            }, {
                key: "_hideModal",
                value: function() {
                    var b = this;
                    this._element.style.display = "none", this._showBackdrop(function() {
                        a(document.body).removeClass(p.OPEN), b._resetAdjustments(), b._resetScrollbar(), 
                        a(b._element).trigger(o.HIDDEN);
                    });
                }
            }, {
                key: "_removeBackdrop",
                value: function() {
                    this._backdrop && (a(this._backdrop).remove(), this._backdrop = null);
                }
            }, {
                key: "_showBackdrop",
                value: function(b) {
                    var c = this, d = a(this._element).hasClass(p.FADE) ? p.FADE : "";
                    if (this._isShown && this._config.backdrop) {
                        var e = f.supportsTransitionEnd() && d;
                        if (this._backdrop = document.createElement("div"), this._backdrop.className = p.BACKDROP, 
                        d && a(this._backdrop).addClass(d), a(this._backdrop).appendTo(document.body), a(this._element).on(o.CLICK_DISMISS, function(a) {
                            return c._ignoreBackdropClick ? void (c._ignoreBackdropClick = !1) : void (a.target === a.currentTarget && ("static" === c._config.backdrop ? c._element.focus() : c.hide()));
                        }), e && f.reflow(this._backdrop), a(this._backdrop).addClass(p.IN), !b) return;
                        if (!e) return void b();
                        a(this._backdrop).one(f.TRANSITION_END, b).emulateTransitionEnd(l);
                    } else if (!this._isShown && this._backdrop) {
                        a(this._backdrop).removeClass(p.IN);
                        var g = function() {
                            c._removeBackdrop(), b && b();
                        };
                        f.supportsTransitionEnd() && a(this._element).hasClass(p.FADE) ? a(this._backdrop).one(f.TRANSITION_END, g).emulateTransitionEnd(l) : g();
                    } else b && b();
                }
            }, {
                key: "_handleUpdate",
                value: function() {
                    this._adjustDialog();
                }
            }, {
                key: "_adjustDialog",
                value: function() {
                    var a = this._element.scrollHeight > document.documentElement.clientHeight;
                    !this._isBodyOverflowing && a && (this._element.style.paddingLeft = this._scrollbarWidth + "px"), 
                    this._isBodyOverflowing && !a && (this._element.style.paddingRight = this._scrollbarWidth + "px~");
                }
            }, {
                key: "_resetAdjustments",
                value: function() {
                    this._element.style.paddingLeft = "", this._element.style.paddingRight = "";
                }
            }, {
                key: "_checkScrollbar",
                value: function() {
                    var a = window.innerWidth;
                    if (!a) {
                        var b = document.documentElement.getBoundingClientRect();
                        a = b.right - Math.abs(b.left);
                    }
                    this._isBodyOverflowing = document.body.clientWidth < a, this._scrollbarWidth = this._getScrollbarWidth();
                }
            }, {
                key: "_setScrollbar",
                value: function() {
                    var b = parseInt(a(q.FIXED_CONTENT).css("padding-right") || 0, 10);
                    this._originalBodyPadding = document.body.style.paddingRight || "", this._isBodyOverflowing && (document.body.style.paddingRight = b + this._scrollbarWidth + "px");
                }
            }, {
                key: "_resetScrollbar",
                value: function() {
                    document.body.style.paddingRight = this._originalBodyPadding;
                }
            }, {
                key: "_getScrollbarWidth",
                value: function() {
                    var a = document.createElement("div");
                    a.className = p.SCROLLBAR_MEASURER, document.body.appendChild(a);
                    var b = a.offsetWidth - a.clientWidth;
                    return document.body.removeChild(a), b;
                }
            } ], [ {
                key: "_jQueryInterface",
                value: function(b, c) {
                    return this.each(function() {
                        var d = a(this).data(g), e = a.extend({}, i.Default, a(this).data(), "object" == typeof b && b);
                        if (d || (d = new i(this, e), a(this).data(g, d)), "string" == typeof b) {
                            if (void 0 === d[b]) throw new Error('No method named "' + b + '"');
                            d[b](c);
                        } else e.show && d.show(c);
                    });
                }
            }, {
                key: "VERSION",
                get: function() {
                    return d;
                }
            }, {
                key: "Default",
                get: function() {
                    return m;
                }
            } ]), i;
        }();
        return a(document).on(o.CLICK_DATA_API, q.DATA_TOGGLE, function(b) {
            var c = this, d = void 0, e = f.getSelectorFromElement(this);
            e && (d = a(e)[0]);
            var h = a(d).data(g) ? "toggle" : a.extend({}, a(d).data(), a(this).data());
            "A" === this.tagName && b.preventDefault();
            var i = a(d).one(o.SHOW, function(b) {
                b.isDefaultPrevented() || i.one(o.HIDDEN, function() {
                    a(c).is(":visible") && c.focus();
                });
            });
            r._jQueryInterface.call(a(d), h, this);
        }), a.fn[b] = r._jQueryInterface, a.fn[b].Constructor = r, a.fn[b].noConflict = function() {
            return a.fn[b] = j, r._jQueryInterface;
        }, r;
    }(jQuery), function(a) {
        var b = "scrollspy", d = "4.0.0-alpha", g = "bs.scrollspy", h = "." + g, i = ".data-api", j = a.fn[b], k = {
            offset: 10,
            method: "auto",
            target: ""
        }, l = {
            offset: "number",
            method: "string",
            target: "(string|element)"
        }, m = {
            ACTIVATE: "activate" + h,
            SCROLL: "scroll" + h,
            LOAD_DATA_API: "load" + h + i
        }, n = {
            DROPDOWN_ITEM: "dropdown-item",
            DROPDOWN_MENU: "dropdown-menu",
            NAV_LINK: "nav-link",
            NAV: "nav",
            ACTIVE: "active"
        }, o = {
            DATA_SPY: '[data-spy="scroll"]',
            ACTIVE: ".active",
            LIST_ITEM: ".list-item",
            LI: "li",
            LI_DROPDOWN: "li.dropdown",
            NAV_LINKS: ".nav-link",
            DROPDOWN: ".dropdown",
            DROPDOWN_ITEMS: ".dropdown-item",
            DROPDOWN_TOGGLE: ".dropdown-toggle"
        }, p = {
            OFFSET: "offset",
            POSITION: "position"
        }, q = function() {
            function i(b, d) {
                c(this, i), this._element = b, this._scrollElement = "BODY" === b.tagName ? window : b, 
                this._config = this._getConfig(d), this._selector = this._config.target + " " + o.NAV_LINKS + "," + (this._config.target + " " + o.DROPDOWN_ITEMS), 
                this._offsets = [], this._targets = [], this._activeTarget = null, this._scrollHeight = 0, 
                a(this._scrollElement).on(m.SCROLL, a.proxy(this._process, this)), this.refresh(), 
                this._process();
            }
            return e(i, [ {
                key: "refresh",
                value: function() {
                    var b = this, c = this._scrollElement !== this._scrollElement.window ? p.POSITION : p.OFFSET, d = "auto" === this._config.method ? c : this._config.method, e = d === p.POSITION ? this._getScrollTop() : 0;
                    this._offsets = [], this._targets = [], this._scrollHeight = this._getScrollHeight();
                    var g = a.makeArray(a(this._selector));
                    g.map(function(b) {
                        var c = void 0, g = f.getSelectorFromElement(b);
                        return g && (c = a(g)[0]), c && (c.offsetWidth || c.offsetHeight) ? [ a(c)[d]().top + e, g ] : void 0;
                    }).filter(function(a) {
                        return a;
                    }).sort(function(a, b) {
                        return a[0] - b[0];
                    }).forEach(function(a) {
                        b._offsets.push(a[0]), b._targets.push(a[1]);
                    });
                }
            }, {
                key: "dispose",
                value: function() {
                    a.removeData(this._element, g), a(this._scrollElement).off(h), this._element = null, 
                    this._scrollElement = null, this._config = null, this._selector = null, this._offsets = null, 
                    this._targets = null, this._activeTarget = null, this._scrollHeight = null;
                }
            }, {
                key: "_getConfig",
                value: function(c) {
                    if (c = a.extend({}, k, c), "string" != typeof c.target) {
                        var d = a(c.target).attr("id");
                        d || (d = f.getUID(b), a(c.target).attr("id", d)), c.target = "#" + d;
                    }
                    return f.typeCheckConfig(b, c, l), c;
                }
            }, {
                key: "_getScrollTop",
                value: function() {
                    return this._scrollElement === window ? this._scrollElement.scrollY : this._scrollElement.scrollTop;
                }
            }, {
                key: "_getScrollHeight",
                value: function() {
                    return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
                }
            }, {
                key: "_process",
                value: function() {
                    var a = this._getScrollTop() + this._config.offset, b = this._getScrollHeight(), c = this._config.offset + b - this._scrollElement.offsetHeight;
                    if (this._scrollHeight !== b && this.refresh(), a >= c) {
                        var d = this._targets[this._targets.length - 1];
                        this._activeTarget !== d && this._activate(d);
                    }
                    if (this._activeTarget && a < this._offsets[0]) return this._activeTarget = null, 
                    void this._clear();
                    for (var e = this._offsets.length; e--; ) {
                        var f = this._activeTarget !== this._targets[e] && a >= this._offsets[e] && (void 0 === this._offsets[e + 1] || a < this._offsets[e + 1]);
                        f && this._activate(this._targets[e]);
                    }
                }
            }, {
                key: "_activate",
                value: function(b) {
                    this._activeTarget = b, this._clear();
                    var c = this._selector.split(",");
                    c = c.map(function(a) {
                        return a + '[data-target="' + b + '"],' + (a + '[href="' + b + '"]');
                    });
                    var d = a(c.join(","));
                    d.hasClass(n.DROPDOWN_ITEM) ? (d.closest(o.DROPDOWN).find(o.DROPDOWN_TOGGLE).addClass(n.ACTIVE), 
                    d.addClass(n.ACTIVE)) : d.parents(o.LI).find(o.NAV_LINKS).addClass(n.ACTIVE), a(this._scrollElement).trigger(m.ACTIVATE, {
                        relatedTarget: b
                    });
                }
            }, {
                key: "_clear",
                value: function() {
                    a(this._selector).filter(o.ACTIVE).removeClass(n.ACTIVE);
                }
            } ], [ {
                key: "_jQueryInterface",
                value: function(b) {
                    return this.each(function() {
                        var c = a(this).data(g), d = "object" == typeof b && b || null;
                        if (c || (c = new i(this, d), a(this).data(g, c)), "string" == typeof b) {
                            if (void 0 === c[b]) throw new Error('No method named "' + b + '"');
                            c[b]();
                        }
                    });
                }
            }, {
                key: "VERSION",
                get: function() {
                    return d;
                }
            }, {
                key: "Default",
                get: function() {
                    return k;
                }
            } ]), i;
        }();
        return a(window).on(m.LOAD_DATA_API, function() {
            for (var b = a.makeArray(a(o.DATA_SPY)), c = b.length; c--; ) {
                var d = a(b[c]);
                q._jQueryInterface.call(d, d.data());
            }
        }), a.fn[b] = q._jQueryInterface, a.fn[b].Constructor = q, a.fn[b].noConflict = function() {
            return a.fn[b] = j, q._jQueryInterface;
        }, q;
    }(jQuery), function(a) {
        var b = "tab", d = "4.0.0-alpha", g = "bs.tab", h = "." + g, i = ".data-api", j = a.fn[b], k = 150, l = {
            HIDE: "hide" + h,
            HIDDEN: "hidden" + h,
            SHOW: "show" + h,
            SHOWN: "shown" + h,
            CLICK_DATA_API: "click" + h + i
        }, m = {
            DROPDOWN_MENU: "dropdown-menu",
            ACTIVE: "active",
            FADE: "fade",
            IN: "in"
        }, n = {
            A: "a",
            LI: "li",
            DROPDOWN: ".dropdown",
            UL: "ul:not(.dropdown-menu)",
            FADE_CHILD: "> .nav-item .fade, > .fade",
            ACTIVE: ".active",
            ACTIVE_CHILD: "> .nav-item > .active, > .active",
            DATA_TOGGLE: '[data-toggle="tab"], [data-toggle="pill"]',
            DROPDOWN_TOGGLE: ".dropdown-toggle",
            DROPDOWN_ACTIVE_CHILD: "> .dropdown-menu .active"
        }, o = function() {
            function b(a) {
                c(this, b), this._element = a;
            }
            return e(b, [ {
                key: "show",
                value: function() {
                    var b = this;
                    if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE || !a(this._element).hasClass(m.ACTIVE)) {
                        var c = void 0, d = void 0, e = a(this._element).closest(n.UL)[0], g = f.getSelectorFromElement(this._element);
                        e && (d = a.makeArray(a(e).find(n.ACTIVE)), d = d[d.length - 1]);
                        var h = a.Event(l.HIDE, {
                            relatedTarget: this._element
                        }), i = a.Event(l.SHOW, {
                            relatedTarget: d
                        });
                        if (d && a(d).trigger(h), a(this._element).trigger(i), !i.isDefaultPrevented() && !h.isDefaultPrevented()) {
                            g && (c = a(g)[0]), this._activate(this._element, e);
                            var j = function() {
                                var c = a.Event(l.HIDDEN, {
                                    relatedTarget: b._element
                                }), e = a.Event(l.SHOWN, {
                                    relatedTarget: d
                                });
                                a(d).trigger(c), a(b._element).trigger(e);
                            };
                            c ? this._activate(c, c.parentNode, j) : j();
                        }
                    }
                }
            }, {
                key: "dispose",
                value: function() {
                    a.removeClass(this._element, g), this._element = null;
                }
            }, {
                key: "_activate",
                value: function(b, c, d) {
                    var e = a(c).find(n.ACTIVE_CHILD)[0], g = d && f.supportsTransitionEnd() && (e && a(e).hasClass(m.FADE) || Boolean(a(c).find(n.FADE_CHILD)[0])), h = a.proxy(this._transitionComplete, this, b, e, g, d);
                    e && g ? a(e).one(f.TRANSITION_END, h).emulateTransitionEnd(k) : h(), e && a(e).removeClass(m.IN);
                }
            }, {
                key: "_transitionComplete",
                value: function(b, c, d, e) {
                    if (c) {
                        a(c).removeClass(m.ACTIVE);
                        var g = a(c).find(n.DROPDOWN_ACTIVE_CHILD)[0];
                        g && a(g).removeClass(m.ACTIVE), c.setAttribute("aria-expanded", !1);
                    }
                    if (a(b).addClass(m.ACTIVE), b.setAttribute("aria-expanded", !0), d ? (f.reflow(b), 
                    a(b).addClass(m.IN)) : a(b).removeClass(m.FADE), b.parentNode && a(b.parentNode).hasClass(m.DROPDOWN_MENU)) {
                        var h = a(b).closest(n.DROPDOWN)[0];
                        h && a(h).find(n.DROPDOWN_TOGGLE).addClass(m.ACTIVE), b.setAttribute("aria-expanded", !0);
                    }
                    e && e();
                }
            } ], [ {
                key: "_jQueryInterface",
                value: function(c) {
                    return this.each(function() {
                        var d = a(this), e = d.data(g);
                        if (e || (e = e = new b(this), d.data(g, e)), "string" == typeof c) {
                            if (void 0 === e[c]) throw new Error('No method named "' + c + '"');
                            e[c]();
                        }
                    });
                }
            }, {
                key: "VERSION",
                get: function() {
                    return d;
                }
            } ]), b;
        }();
        return a(document).on(l.CLICK_DATA_API, n.DATA_TOGGLE, function(b) {
            b.preventDefault(), o._jQueryInterface.call(a(this), "show");
        }), a.fn[b] = o._jQueryInterface, a.fn[b].Constructor = o, a.fn[b].noConflict = function() {
            return a.fn[b] = j, o._jQueryInterface;
        }, o;
    }(jQuery), function(a) {
        if (void 0 === window.Tether) throw new Error("Bootstrap tooltips require Tether (http://github.hubspot.com/tether/)");
        var b = "tooltip", d = "4.0.0-alpha", g = "bs.tooltip", h = "." + g, i = a.fn[b], j = 150, k = "bs-tether", l = {
            animation: !0,
            template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
            trigger: "hover focus",
            title: "",
            delay: 0,
            html: !1,
            selector: !1,
            placement: "top",
            offset: "0 0",
            constraints: []
        }, m = {
            animation: "boolean",
            template: "string",
            title: "(string|element|function)",
            trigger: "string",
            delay: "(number|object)",
            html: "boolean",
            selector: "(string|boolean)",
            placement: "(string|function)",
            offset: "string",
            constraints: "array"
        }, n = {
            TOP: "bottom center",
            RIGHT: "middle left",
            BOTTOM: "top center",
            LEFT: "middle right"
        }, o = {
            IN: "in",
            OUT: "out"
        }, p = {
            HIDE: "hide" + h,
            HIDDEN: "hidden" + h,
            SHOW: "show" + h,
            SHOWN: "shown" + h,
            INSERTED: "inserted" + h,
            CLICK: "click" + h,
            FOCUSIN: "focusin" + h,
            FOCUSOUT: "focusout" + h,
            MOUSEENTER: "mouseenter" + h,
            MOUSELEAVE: "mouseleave" + h
        }, q = {
            FADE: "fade",
            IN: "in"
        }, r = {
            TOOLTIP: ".tooltip",
            TOOLTIP_INNER: ".tooltip-inner"
        }, s = {
            element: !1,
            enabled: !1
        }, t = {
            HOVER: "hover",
            FOCUS: "focus",
            CLICK: "click",
            MANUAL: "manual"
        }, u = function() {
            function i(a, b) {
                c(this, i), this._isEnabled = !0, this._timeout = 0, this._hoverState = "", this._activeTrigger = {}, 
                this._tether = null, this.element = a, this.config = this._getConfig(b), this.tip = null, 
                this._setListeners();
            }
            return e(i, [ {
                key: "enable",
                value: function() {
                    this._isEnabled = !0;
                }
            }, {
                key: "disable",
                value: function() {
                    this._isEnabled = !1;
                }
            }, {
                key: "toggleEnabled",
                value: function() {
                    this._isEnabled = !this._isEnabled;
                }
            }, {
                key: "toggle",
                value: function(b) {
                    if (b) {
                        var c = this.constructor.DATA_KEY, d = a(b.currentTarget).data(c);
                        d || (d = new this.constructor(b.currentTarget, this._getDelegateConfig()), a(b.currentTarget).data(c, d)), 
                        d._activeTrigger.click = !d._activeTrigger.click, d._isWithActiveTrigger() ? d._enter(null, d) : d._leave(null, d);
                    } else {
                        if (a(this.getTipElement()).hasClass(q.IN)) return void this._leave(null, this);
                        this._enter(null, this);
                    }
                }
            }, {
                key: "dispose",
                value: function() {
                    clearTimeout(this._timeout), this.cleanupTether(), a.removeData(this.element, this.constructor.DATA_KEY), 
                    a(this.element).off(this.constructor.EVENT_KEY), this.tip && a(this.tip).remove(), 
                    this._isEnabled = null, this._timeout = null, this._hoverState = null, this._activeTrigger = null, 
                    this._tether = null, this.element = null, this.config = null, this.tip = null;
                }
            }, {
                key: "show",
                value: function() {
                    var b = this, c = a.Event(this.constructor.Event.SHOW);
                    if (this.isWithContent() && this._isEnabled) {
                        a(this.element).trigger(c);
                        var d = a.contains(this.element.ownerDocument.documentElement, this.element);
                        if (c.isDefaultPrevented() || !d) return;
                        var e = this.getTipElement(), g = f.getUID(this.constructor.NAME);
                        e.setAttribute("id", g), this.element.setAttribute("aria-describedby", g), this.setContent(), 
                        this.config.animation && a(e).addClass(q.FADE);
                        var h = "function" == typeof this.config.placement ? this.config.placement.call(this, e, this.element) : this.config.placement, j = this._getAttachment(h);
                        a(e).data(this.constructor.DATA_KEY, this).appendTo(document.body), a(this.element).trigger(this.constructor.Event.INSERTED), 
                        this._tether = new Tether({
                            attachment: j,
                            element: e,
                            target: this.element,
                            classes: s,
                            classPrefix: k,
                            offset: this.config.offset,
                            constraints: this.config.constraints,
                            addTargetClasses: !1
                        }), f.reflow(e), this._tether.position(), a(e).addClass(q.IN);
                        var l = function() {
                            var c = b._hoverState;
                            b._hoverState = null, a(b.element).trigger(b.constructor.Event.SHOWN), c === o.OUT && b._leave(null, b);
                        };
                        if (f.supportsTransitionEnd() && a(this.tip).hasClass(q.FADE)) return void a(this.tip).one(f.TRANSITION_END, l).emulateTransitionEnd(i._TRANSITION_DURATION);
                        l();
                    }
                }
            }, {
                key: "hide",
                value: function(b) {
                    var c = this, d = this.getTipElement(), e = a.Event(this.constructor.Event.HIDE), g = function() {
                        c._hoverState !== o.IN && d.parentNode && d.parentNode.removeChild(d), c.element.removeAttribute("aria-describedby"), 
                        a(c.element).trigger(c.constructor.Event.HIDDEN), c.cleanupTether(), b && b();
                    };
                    a(this.element).trigger(e), e.isDefaultPrevented() || (a(d).removeClass(q.IN), f.supportsTransitionEnd() && a(this.tip).hasClass(q.FADE) ? a(d).one(f.TRANSITION_END, g).emulateTransitionEnd(j) : g(), 
                    this._hoverState = "");
                }
            }, {
                key: "isWithContent",
                value: function() {
                    return Boolean(this.getTitle());
                }
            }, {
                key: "getTipElement",
                value: function() {
                    return this.tip = this.tip || a(this.config.template)[0];
                }
            }, {
                key: "setContent",
                value: function() {
                    var b = a(this.getTipElement());
                    this.setElementContent(b.find(r.TOOLTIP_INNER), this.getTitle()), b.removeClass(q.FADE).removeClass(q.IN), 
                    this.cleanupTether();
                }
            }, {
                key: "setElementContent",
                value: function(b, c) {
                    var d = this.config.html;
                    "object" == typeof c && (c.nodeType || c.jquery) ? d ? a(c).parent().is(b) || b.empty().append(c) : b.text(a(c).text()) : b[d ? "html" : "text"](c);
                }
            }, {
                key: "getTitle",
                value: function() {
                    var a = this.element.getAttribute("data-original-title");
                    return a || (a = "function" == typeof this.config.title ? this.config.title.call(this.element) : this.config.title), 
                    a;
                }
            }, {
                key: "cleanupTether",
                value: function() {
                    this._tether && this._tether.destroy();
                }
            }, {
                key: "_getAttachment",
                value: function(a) {
                    return n[a.toUpperCase()];
                }
            }, {
                key: "_setListeners",
                value: function() {
                    var b = this, c = this.config.trigger.split(" ");
                    c.forEach(function(c) {
                        if ("click" === c) a(b.element).on(b.constructor.Event.CLICK, b.config.selector, a.proxy(b.toggle, b)); else if (c !== t.MANUAL) {
                            var d = c === t.HOVER ? b.constructor.Event.MOUSEENTER : b.constructor.Event.FOCUSIN, e = c === t.HOVER ? b.constructor.Event.MOUSELEAVE : b.constructor.Event.FOCUSOUT;
                            a(b.element).on(d, b.config.selector, a.proxy(b._enter, b)).on(e, b.config.selector, a.proxy(b._leave, b));
                        }
                    }), this.config.selector ? this.config = a.extend({}, this.config, {
                        trigger: "manual",
                        selector: ""
                    }) : this._fixTitle();
                }
            }, {
                key: "_fixTitle",
                value: function() {
                    var a = typeof this.element.getAttribute("data-original-title");
                    (this.element.getAttribute("title") || "string" !== a) && (this.element.setAttribute("data-original-title", this.element.getAttribute("title") || ""), 
                    this.element.setAttribute("title", ""));
                }
            }, {
                key: "_enter",
                value: function(b, c) {
                    var d = this.constructor.DATA_KEY;
                    return c = c || a(b.currentTarget).data(d), c || (c = new this.constructor(b.currentTarget, this._getDelegateConfig()), 
                    a(b.currentTarget).data(d, c)), b && (c._activeTrigger["focusin" === b.type ? t.FOCUS : t.HOVER] = !0), 
                    a(c.getTipElement()).hasClass(q.IN) || c._hoverState === o.IN ? void (c._hoverState = o.IN) : (clearTimeout(c._timeout), 
                    c._hoverState = o.IN, c.config.delay && c.config.delay.show ? void (c._timeout = setTimeout(function() {
                        c._hoverState === o.IN && c.show();
                    }, c.config.delay.show)) : void c.show());
                }
            }, {
                key: "_leave",
                value: function(b, c) {
                    var d = this.constructor.DATA_KEY;
                    return c = c || a(b.currentTarget).data(d), c || (c = new this.constructor(b.currentTarget, this._getDelegateConfig()), 
                    a(b.currentTarget).data(d, c)), b && (c._activeTrigger["focusout" === b.type ? t.FOCUS : t.HOVER] = !1), 
                    c._isWithActiveTrigger() ? void 0 : (clearTimeout(c._timeout), c._hoverState = o.OUT, 
                    c.config.delay && c.config.delay.hide ? void (c._timeout = setTimeout(function() {
                        c._hoverState === o.OUT && c.hide();
                    }, c.config.delay.hide)) : void c.hide());
                }
            }, {
                key: "_isWithActiveTrigger",
                value: function() {
                    for (var a in this._activeTrigger) if (this._activeTrigger[a]) return !0;
                    return !1;
                }
            }, {
                key: "_getConfig",
                value: function(c) {
                    return c = a.extend({}, this.constructor.Default, a(this.element).data(), c), c.delay && "number" == typeof c.delay && (c.delay = {
                        show: c.delay,
                        hide: c.delay
                    }), f.typeCheckConfig(b, c, this.constructor.DefaultType), c;
                }
            }, {
                key: "_getDelegateConfig",
                value: function() {
                    var a = {};
                    if (this.config) for (var b in this.config) this.constructor.Default[b] !== this.config[b] && (a[b] = this.config[b]);
                    return a;
                }
            } ], [ {
                key: "_jQueryInterface",
                value: function(b) {
                    return this.each(function() {
                        var c = a(this).data(g), d = "object" == typeof b ? b : null;
                        if ((c || !/destroy|hide/.test(b)) && (c || (c = new i(this, d), a(this).data(g, c)), 
                        "string" == typeof b)) {
                            if (void 0 === c[b]) throw new Error('No method named "' + b + '"');
                            c[b]();
                        }
                    });
                }
            }, {
                key: "VERSION",
                get: function() {
                    return d;
                }
            }, {
                key: "Default",
                get: function() {
                    return l;
                }
            }, {
                key: "NAME",
                get: function() {
                    return b;
                }
            }, {
                key: "DATA_KEY",
                get: function() {
                    return g;
                }
            }, {
                key: "Event",
                get: function() {
                    return p;
                }
            }, {
                key: "EVENT_KEY",
                get: function() {
                    return h;
                }
            }, {
                key: "DefaultType",
                get: function() {
                    return m;
                }
            } ]), i;
        }();
        return a.fn[b] = u._jQueryInterface, a.fn[b].Constructor = u, a.fn[b].noConflict = function() {
            return a.fn[b] = i, u._jQueryInterface;
        }, u;
    }(jQuery));
    (function(a) {
        var f = "popover", h = "4.0.0-alpha", i = "bs.popover", j = "." + i, k = a.fn[f], l = a.extend({}, g.Default, {
            placement: "right",
            trigger: "click",
            content: "",
            template: '<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
        }), m = a.extend({}, g.DefaultType, {
            content: "(string|element|function)"
        }), n = {
            FADE: "fade",
            IN: "in"
        }, o = {
            TITLE: ".popover-title",
            CONTENT: ".popover-content",
            ARROW: ".popover-arrow"
        }, p = {
            HIDE: "hide" + j,
            HIDDEN: "hidden" + j,
            SHOW: "show" + j,
            SHOWN: "shown" + j,
            INSERTED: "inserted" + j,
            CLICK: "click" + j,
            FOCUSIN: "focusin" + j,
            FOCUSOUT: "focusout" + j,
            MOUSEENTER: "mouseenter" + j,
            MOUSELEAVE: "mouseleave" + j
        }, q = function(g) {
            function k() {
                c(this, k), d(Object.getPrototypeOf(k.prototype), "constructor", this).apply(this, arguments);
            }
            return b(k, g), e(k, [ {
                key: "isWithContent",
                value: function() {
                    return this.getTitle() || this._getContent();
                }
            }, {
                key: "getTipElement",
                value: function() {
                    return this.tip = this.tip || a(this.config.template)[0];
                }
            }, {
                key: "setContent",
                value: function() {
                    var b = a(this.getTipElement());
                    this.setElementContent(b.find(o.TITLE), this.getTitle()), this.setElementContent(b.find(o.CONTENT), this._getContent()), 
                    b.removeClass(n.FADE).removeClass(n.IN), this.cleanupTether();
                }
            }, {
                key: "_getContent",
                value: function() {
                    return this.element.getAttribute("data-content") || ("function" == typeof this.config.content ? this.config.content.call(this.element) : this.config.content);
                }
            } ], [ {
                key: "_jQueryInterface",
                value: function(b) {
                    return this.each(function() {
                        var c = a(this).data(i), d = "object" == typeof b ? b : null;
                        if ((c || !/destroy|hide/.test(b)) && (c || (c = new k(this, d), a(this).data(i, c)), 
                        "string" == typeof b)) {
                            if (void 0 === c[b]) throw new Error('No method named "' + b + '"');
                            c[b]();
                        }
                    });
                }
            }, {
                key: "VERSION",
                get: function() {
                    return h;
                }
            }, {
                key: "Default",
                get: function() {
                    return l;
                }
            }, {
                key: "NAME",
                get: function() {
                    return f;
                }
            }, {
                key: "DATA_KEY",
                get: function() {
                    return i;
                }
            }, {
                key: "Event",
                get: function() {
                    return p;
                }
            }, {
                key: "EVENT_KEY",
                get: function() {
                    return j;
                }
            }, {
                key: "DefaultType",
                get: function() {
                    return m;
                }
            } ]), k;
        }(g);
        return a.fn[f] = q._jQueryInterface, a.fn[f].Constructor = q, a.fn[f].noConflict = function() {
            return a.fn[f] = k, q._jQueryInterface;
        }, q;
    })(jQuery);
}(jQuery);

/*!

Holder - client side image placeholders
Version 2.9.0+f2dkw
© 2015 Ivan Malopinsky - http://imsky.co

Site:     http://holderjs.com
Issues:   https://github.com/imsky/holder/issues
License:  MIT

*/
!function(e) {
    if (e.document) {
        var t = e.document;
        t.querySelectorAll || (t.querySelectorAll = function(n) {
            var r, i = t.createElement("style"), o = [];
            for (t.documentElement.firstChild.appendChild(i), t._qsa = [], i.styleSheet.cssText = n + "{x-qsa:expression(document._qsa && document._qsa.push(this))}", 
            e.scrollBy(0, 0), i.parentNode.removeChild(i); t._qsa.length; ) r = t._qsa.shift(), 
            r.style.removeAttribute("x-qsa"), o.push(r);
            return t._qsa = null, o;
        }), t.querySelector || (t.querySelector = function(e) {
            var n = t.querySelectorAll(e);
            return n.length ? n[0] : null;
        }), t.getElementsByClassName || (t.getElementsByClassName = function(e) {
            return e = String(e).replace(/^|\s+/g, "."), t.querySelectorAll(e);
        }), Object.keys || (Object.keys = function(e) {
            if (e !== Object(e)) throw TypeError("Object.keys called on non-object");
            var t, n = [];
            for (t in e) Object.prototype.hasOwnProperty.call(e, t) && n.push(t);
            return n;
        }), Array.prototype.forEach || (Array.prototype.forEach = function(e) {
            if (void 0 === this || null === this) throw TypeError();
            var t = Object(this), n = t.length >>> 0;
            if ("function" != typeof e) throw TypeError();
            var r, i = arguments[1];
            for (r = 0; n > r; r++) r in t && e.call(i, t[r], r, t);
        }), function(e) {
            var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
            e.atob = e.atob || function(e) {
                e = String(e);
                var n, r = 0, i = [], o = 0, a = 0;
                if (e = e.replace(/\s/g, ""), e.length % 4 === 0 && (e = e.replace(/=+$/, "")), 
                e.length % 4 === 1) throw Error("InvalidCharacterError");
                if (/[^+\/0-9A-Za-z]/.test(e)) throw Error("InvalidCharacterError");
                for (;r < e.length; ) n = t.indexOf(e.charAt(r)), o = o << 6 | n, a += 6, 24 === a && (i.push(String.fromCharCode(o >> 16 & 255)), 
                i.push(String.fromCharCode(o >> 8 & 255)), i.push(String.fromCharCode(255 & o)), 
                a = 0, o = 0), r += 1;
                return 12 === a ? (o >>= 4, i.push(String.fromCharCode(255 & o))) : 18 === a && (o >>= 2, 
                i.push(String.fromCharCode(o >> 8 & 255)), i.push(String.fromCharCode(255 & o))), 
                i.join("");
            }, e.btoa = e.btoa || function(e) {
                e = String(e);
                var n, r, i, o, a, s, l, h = 0, u = [];
                if (/[^\x00-\xFF]/.test(e)) throw Error("InvalidCharacterError");
                for (;h < e.length; ) n = e.charCodeAt(h++), r = e.charCodeAt(h++), i = e.charCodeAt(h++), 
                o = n >> 2, a = (3 & n) << 4 | r >> 4, s = (15 & r) << 2 | i >> 6, l = 63 & i, h === e.length + 2 ? (s = 64, 
                l = 64) : h === e.length + 1 && (l = 64), u.push(t.charAt(o), t.charAt(a), t.charAt(s), t.charAt(l));
                return u.join("");
            };
        }(e), Object.prototype.hasOwnProperty || (Object.prototype.hasOwnProperty = function(e) {
            var t = this.__proto__ || this.constructor.prototype;
            return e in this && (!(e in t) || t[e] !== this[e]);
        }), function() {
            if ("performance" in e == !1 && (e.performance = {}), Date.now = Date.now || function() {
                return new Date().getTime();
            }, "now" in e.performance == !1) {
                var t = Date.now();
                performance.timing && performance.timing.navigationStart && (t = performance.timing.navigationStart), 
                e.performance.now = function() {
                    return Date.now() - t;
                };
            }
        }(), e.requestAnimationFrame || (e.webkitRequestAnimationFrame ? !function(e) {
            e.requestAnimationFrame = function(t) {
                return webkitRequestAnimationFrame(function() {
                    t(e.performance.now());
                });
            }, e.cancelAnimationFrame = webkitCancelAnimationFrame;
        }(e) : e.mozRequestAnimationFrame ? !function(e) {
            e.requestAnimationFrame = function(t) {
                return mozRequestAnimationFrame(function() {
                    t(e.performance.now());
                });
            }, e.cancelAnimationFrame = mozCancelAnimationFrame;
        }(e) : !function(e) {
            e.requestAnimationFrame = function(t) {
                return e.setTimeout(t, 1e3 / 60);
            }, e.cancelAnimationFrame = e.clearTimeout;
        }(e));
    }
}(this), function(e, t) {
    "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.Holder = t() : e.Holder = t();
}(this, function() {
    return function(e) {
        function t(r) {
            if (n[r]) return n[r].exports;
            var i = n[r] = {
                exports: {},
                id: r,
                loaded: !1
            };
            return e[r].call(i.exports, i, i.exports, t), i.loaded = !0, i.exports;
        }
        var n = {};
        return t.m = e, t.c = n, t.p = "", t(0);
    }([ function(e, t, n) {
        e.exports = n(1);
    }, function(e, t, n) {
        (function(t) {
            function r(e, t, n, r) {
                var a = i(n.substr(n.lastIndexOf(e.domain)), e);
                a && o({
                    mode: null,
                    el: r,
                    flags: a,
                    engineSettings: t
                });
            }
            function i(e, t) {
                var n = {
                    theme: T(F.settings.themes.gray, null),
                    stylesheets: t.stylesheets,
                    instanceOptions: t
                }, r = e.split("?"), i = r[0].split("/");
                n.holderURL = e;
                var o = i[1], a = o.match(/([\d]+p?)x([\d]+p?)/);
                if (!a) return !1;
                if (n.fluid = -1 !== o.indexOf("p"), n.dimensions = {
                    width: a[1].replace("p", "%"),
                    height: a[2].replace("p", "%")
                }, 2 === r.length) {
                    var s = v.parse(r[1]);
                    if (s.bg && (n.theme.bg = w.parseColor(s.bg)), s.fg && (n.theme.fg = w.parseColor(s.fg)), 
                    s.bg && !s.fg && (n.autoFg = !0), s.theme && n.instanceOptions.themes.hasOwnProperty(s.theme) && (n.theme = T(n.instanceOptions.themes[s.theme], null)), 
                    s.text && (n.text = s.text), s.textmode && (n.textmode = s.textmode), s.size && (n.size = s.size), 
                    s.font && (n.font = s.font), s.align && (n.align = s.align), s.lineWrap && (n.lineWrap = s.lineWrap), 
                    n.nowrap = w.truthy(s.nowrap), n.auto = w.truthy(s.auto), n.outline = w.truthy(s.outline), 
                    w.truthy(s.random)) {
                        F.vars.cache.themeKeys = F.vars.cache.themeKeys || Object.keys(n.instanceOptions.themes);
                        var l = F.vars.cache.themeKeys[0 | Math.random() * F.vars.cache.themeKeys.length];
                        n.theme = T(n.instanceOptions.themes[l], null);
                    }
                }
                return n;
            }
            function o(e) {
                var t = e.mode, n = e.el, r = e.flags, i = e.engineSettings, o = r.dimensions, s = r.theme, l = o.width + "x" + o.height;
                t = null == t ? r.fluid ? "fluid" : "image" : t;
                var d = /holder_([a-z]+)/g, c = !1;
                if (null != r.text && (s.text = r.text, "object" === n.nodeName.toLowerCase())) {
                    for (var f = s.text.split("\\n"), p = 0; p < f.length; p++) f[p] = w.encodeHtmlEntity(f[p]);
                    s.text = f.join("\\n");
                }
                if (s.text) {
                    var g = s.text.match(d);
                    null !== g && g.forEach(function(e) {
                        "holder_dimensions" === e && (s.text = s.text.replace(e, l));
                    });
                }
                var m = r.holderURL, v = T(i, null);
                if (r.font && (s.font = r.font, !v.noFontFallback && "img" === n.nodeName.toLowerCase() && F.setup.supportsCanvas && "svg" === v.renderer && (v = T(v, {
                    renderer: "canvas"
                }))), r.font && "canvas" == v.renderer && (v.reRender = !0), "background" == t) null == n.getAttribute("data-background-src") && x.setAttr(n, {
                    "data-background-src": m
                }); else {
                    var y = {};
                    y[F.vars.dataAttr] = m, x.setAttr(n, y);
                }
                r.theme = s, n.holderData = {
                    flags: r,
                    engineSettings: v
                }, ("image" == t || "fluid" == t) && x.setAttr(n, {
                    alt: s.text ? c ? s.text : s.text + " [" + l + "]" : l
                });
                var b = {
                    mode: t,
                    el: n,
                    holderSettings: {
                        dimensions: o,
                        theme: s,
                        flags: r
                    },
                    engineSettings: v
                };
                "image" == t ? (r.auto || (n.style.width = o.width + "px", n.style.height = o.height + "px"), 
                "html" == v.renderer ? n.style.backgroundColor = s.background : (a(b), "exact" == r.textmode && (n.holderData.resizeUpdate = !0, 
                F.vars.resizableImages.push(n), h(n)))) : "background" == t && "html" != v.renderer ? a(b) : "fluid" == t && (n.holderData.resizeUpdate = !0, 
                "%" == o.height.slice(-1) ? n.style.height = o.height : null != r.auto && r.auto || (n.style.height = o.height + "px"), 
                "%" == o.width.slice(-1) ? n.style.width = o.width : null != r.auto && r.auto || (n.style.width = o.width + "px"), 
                ("inline" == n.style.display || "" === n.style.display || "none" == n.style.display) && (n.style.display = "block"), 
                u(n), "html" == v.renderer ? n.style.backgroundColor = s.background : (F.vars.resizableImages.push(n), 
                h(n)));
            }
            function a(e) {
                function n() {
                    var t = null;
                    switch (l.renderer) {
                      case "canvas":
                        t = E(u, e);
                        break;

                      case "svg":
                        t = C(u, e);
                        break;

                      default:
                        throw "Holder: invalid renderer: " + l.renderer;
                    }
                    return t;
                }
                var r = null, i = e.mode, o = e.el, a = e.holderSettings, l = e.engineSettings;
                switch (l.renderer) {
                  case "svg":
                    if (!F.setup.supportsSVG) return;
                    break;

                  case "canvas":
                    if (!F.setup.supportsCanvas) return;
                    break;

                  default:
                    return;
                }
                var h = {
                    width: a.dimensions.width,
                    height: a.dimensions.height,
                    theme: a.theme,
                    flags: a.flags
                }, u = s(h);
                if (r = n(), null == r) throw "Holder: couldn't render placeholder";
                "background" == i ? (o.style.backgroundImage = "url(" + r + ")", o.style.backgroundSize = h.width + "px " + h.height + "px") : ("img" === o.nodeName.toLowerCase() ? x.setAttr(o, {
                    src: r
                }) : "object" === o.nodeName.toLowerCase() && x.setAttr(o, {
                    data: r,
                    type: "image/svg+xml"
                }), l.reRender && t.setTimeout(function() {
                    var e = n();
                    if (null == e) throw "Holder: couldn't render placeholder";
                    "img" === o.nodeName.toLowerCase() ? x.setAttr(o, {
                        src: e
                    }) : "object" === o.nodeName.toLowerCase() && x.setAttr(o, {
                        data: e,
                        type: "image/svg+xml"
                    });
                }, 150)), x.setAttr(o, {
                    "data-holder-rendered": !0
                });
            }
            function s(e) {
                function t(e, t, n, r) {
                    t.width = n, t.height = r, e.width = Math.max(e.width, t.width), e.height += t.height;
                }
                var n = F.defaults.size;
                switch (parseFloat(e.theme.size) ? n = e.theme.size : parseFloat(e.flags.size) && (n = e.flags.size), 
                e.font = {
                    family: e.theme.font ? e.theme.font : "Arial, Helvetica, Open Sans, sans-serif",
                    size: l(e.width, e.height, n, F.defaults.scale),
                    units: e.theme.units ? e.theme.units : F.defaults.units,
                    weight: e.theme.fontweight ? e.theme.fontweight : "bold"
                }, e.text = e.theme.text || Math.floor(e.width) + "x" + Math.floor(e.height), e.noWrap = e.theme.nowrap || e.flags.nowrap, 
                e.align = e.theme.align || e.flags.align || "center", e.flags.textmode) {
                  case "literal":
                    e.text = e.flags.dimensions.width + "x" + e.flags.dimensions.height;
                    break;

                  case "exact":
                    if (!e.flags.exactDimensions) break;
                    e.text = Math.floor(e.flags.exactDimensions.width) + "x" + Math.floor(e.flags.exactDimensions.height);
                }
                var r = e.flags.lineWrap || F.setup.lineWrapRatio, i = e.width * r, o = i, a = new y({
                    width: e.width,
                    height: e.height
                }), s = a.Shape, h = new s.Rect("holderBg", {
                    fill: e.theme.bg
                });
                if (h.resize(e.width, e.height), a.root.add(h), e.flags.outline) {
                    var u = new S(h.properties.fill);
                    u = u.lighten(u.lighterThan("7f7f7f") ? -.1 : .1), h.properties.outline = {
                        fill: u.toHex(!0),
                        width: 2
                    };
                }
                var d = e.theme.fg;
                if (e.flags.autoFg) {
                    var c = new S(h.properties.fill), f = new S("fff"), p = new S("000", {
                        alpha: .285714
                    });
                    d = c.blendAlpha(c.lighterThan("7f7f7f") ? p : f).toHex(!0);
                }
                var g = new s.Group("holderTextGroup", {
                    text: e.text,
                    align: e.align,
                    font: e.font,
                    fill: d
                });
                g.moveTo(null, null, 1), a.root.add(g);
                var m = g.textPositionData = z(a);
                if (!m) throw "Holder: staging fallback not supported yet.";
                g.properties.leading = m.boundingBox.height;
                var v = null, w = null;
                if (m.lineCount > 1) {
                    var b, x = 0, A = 0, C = 0;
                    w = new s.Group("line" + C), ("left" === e.align || "right" === e.align) && (o = e.width * (1 - 2 * (1 - r)));
                    for (var E = 0; E < m.words.length; E++) {
                        var T = m.words[E];
                        v = new s.Text(T.text);
                        var k = "\\n" == T.text;
                        !e.noWrap && (x + T.width >= o || k === !0) && (t(g, w, x, g.properties.leading), 
                        g.add(w), x = 0, A += g.properties.leading, C += 1, w = new s.Group("line" + C), 
                        w.y = A), k !== !0 && (v.moveTo(x, 0), x += m.spaceWidth + T.width, w.add(v));
                    }
                    if (t(g, w, x, g.properties.leading), g.add(w), "left" === e.align) g.moveTo(e.width - i, null, null); else if ("right" === e.align) {
                        for (b in g.children) w = g.children[b], w.moveTo(e.width - w.width, null, null);
                        g.moveTo(0 - (e.width - i), null, null);
                    } else {
                        for (b in g.children) w = g.children[b], w.moveTo((g.width - w.width) / 2, null, null);
                        g.moveTo((e.width - g.width) / 2, null, null);
                    }
                    g.moveTo(null, (e.height - g.height) / 2, null), (e.height - g.height) / 2 < 0 && g.moveTo(null, 0, null);
                } else v = new s.Text(e.text), w = new s.Group("line0"), w.add(v), g.add(w), "left" === e.align ? g.moveTo(e.width - i, null, null) : "right" === e.align ? g.moveTo(0 - (e.width - i), null, null) : g.moveTo((e.width - m.boundingBox.width) / 2, null, null), 
                g.moveTo(null, (e.height - m.boundingBox.height) / 2, null);
                return a;
            }
            function l(e, t, n, r) {
                var i = parseInt(e, 10), o = parseInt(t, 10), a = Math.max(i, o), s = Math.min(i, o), l = .8 * Math.min(s, a * r);
                return Math.round(Math.max(n, l));
            }
            function h(e) {
                var t;
                t = null == e || null == e.nodeType ? F.vars.resizableImages : [ e ];
                for (var n = 0, r = t.length; r > n; n++) {
                    var i = t[n];
                    if (i.holderData) {
                        var o = i.holderData.flags, s = k(i);
                        if (s) {
                            if (!i.holderData.resizeUpdate) continue;
                            if (o.fluid && o.auto) {
                                var l = i.holderData.fluidConfig;
                                switch (l.mode) {
                                  case "width":
                                    s.height = s.width / l.ratio;
                                    break;

                                  case "height":
                                    s.width = s.height * l.ratio;
                                }
                            }
                            var h = {
                                mode: "image",
                                holderSettings: {
                                    dimensions: s,
                                    theme: o.theme,
                                    flags: o
                                },
                                el: i,
                                engineSettings: i.holderData.engineSettings
                            };
                            "exact" == o.textmode && (o.exactDimensions = s, h.holderSettings.dimensions = o.dimensions), 
                            a(h);
                        } else f(i);
                    }
                }
            }
            function u(e) {
                if (e.holderData) {
                    var t = k(e);
                    if (t) {
                        var n = e.holderData.flags, r = {
                            fluidHeight: "%" == n.dimensions.height.slice(-1),
                            fluidWidth: "%" == n.dimensions.width.slice(-1),
                            mode: null,
                            initialDimensions: t
                        };
                        r.fluidWidth && !r.fluidHeight ? (r.mode = "width", r.ratio = r.initialDimensions.width / parseFloat(n.dimensions.height)) : !r.fluidWidth && r.fluidHeight && (r.mode = "height", 
                        r.ratio = parseFloat(n.dimensions.width) / r.initialDimensions.height), e.holderData.fluidConfig = r;
                    } else f(e);
                }
            }
            function d() {
                var e, n = [], r = Object.keys(F.vars.invisibleImages);
                r.forEach(function(t) {
                    e = F.vars.invisibleImages[t], k(e) && "img" == e.nodeName.toLowerCase() && (n.push(e), 
                    delete F.vars.invisibleImages[t]);
                }), n.length && O.run({
                    images: n
                }), setTimeout(function() {
                    t.requestAnimationFrame(d);
                }, 10);
            }
            function c() {
                F.vars.visibilityCheckStarted || (t.requestAnimationFrame(d), F.vars.visibilityCheckStarted = !0);
            }
            function f(e) {
                e.holderData.invisibleId || (F.vars.invisibleId += 1, F.vars.invisibleImages["i" + F.vars.invisibleId] = e, 
                e.holderData.invisibleId = F.vars.invisibleId);
            }
            function p(e) {
                F.vars.debounceTimer || e.call(this), F.vars.debounceTimer && t.clearTimeout(F.vars.debounceTimer), 
                F.vars.debounceTimer = t.setTimeout(function() {
                    F.vars.debounceTimer = null, e.call(this);
                }, F.setup.debounce);
            }
            function g() {
                p(function() {
                    h(null);
                });
            }
            var m = n(2), v = n(3), y = n(6), w = n(7), b = n(8), x = n(9), S = n(10), A = n(11), C = n(12), E = n(15), T = w.extend, k = w.dimensionCheck, j = A.svg_ns, O = {
                version: A.version,
                addTheme: function(e, t) {
                    return null != e && null != t && (F.settings.themes[e] = t), delete F.vars.cache.themeKeys, 
                    this;
                },
                addImage: function(e, t) {
                    var n = x.getNodeArray(t);
                    return n.forEach(function(t) {
                        var n = x.newEl("img"), r = {};
                        r[F.setup.dataAttr] = e, x.setAttr(n, r), t.appendChild(n);
                    }), this;
                },
                setResizeUpdate: function(e, t) {
                    e.holderData && (e.holderData.resizeUpdate = !!t, e.holderData.resizeUpdate && h(e));
                },
                run: function(e) {
                    e = e || {};
                    var n = {}, a = T(F.settings, e);
                    F.vars.preempted = !0, F.vars.dataAttr = a.dataAttr || F.setup.dataAttr, n.renderer = a.renderer ? a.renderer : F.setup.renderer, 
                    -1 === F.setup.renderers.join(",").indexOf(n.renderer) && (n.renderer = F.setup.supportsSVG ? "svg" : F.setup.supportsCanvas ? "canvas" : "html");
                    var s = x.getNodeArray(a.images), l = x.getNodeArray(a.bgnodes), h = x.getNodeArray(a.stylenodes), u = x.getNodeArray(a.objects);
                    return n.stylesheets = [], n.svgXMLStylesheet = !0, n.noFontFallback = a.noFontFallback ? a.noFontFallback : !1, 
                    h.forEach(function(e) {
                        if (e.attributes.rel && e.attributes.href && "stylesheet" == e.attributes.rel.value) {
                            var t = e.attributes.href.value, r = x.newEl("a");
                            r.href = t;
                            var i = r.protocol + "//" + r.host + r.pathname + r.search;
                            n.stylesheets.push(i);
                        }
                    }), l.forEach(function(e) {
                        if (t.getComputedStyle) {
                            var r = t.getComputedStyle(e, null).getPropertyValue("background-image"), s = e.getAttribute("data-background-src"), l = s || r, h = null, u = a.domain + "/", d = l.indexOf(u);
                            if (0 === d) h = l; else if (1 === d && "?" === l[0]) h = l.slice(1); else {
                                var c = l.substr(d).match(/([^\"]*)"?\)/);
                                if (null !== c) h = c[1]; else if (0 === l.indexOf("url(")) throw "Holder: unable to parse background URL: " + l;
                            }
                            if (null != h) {
                                var f = i(h, a);
                                f && o({
                                    mode: "background",
                                    el: e,
                                    flags: f,
                                    engineSettings: n
                                });
                            }
                        }
                    }), u.forEach(function(e) {
                        var t = {};
                        try {
                            t.data = e.getAttribute("data"), t.dataSrc = e.getAttribute(F.vars.dataAttr);
                        } catch (i) {}
                        var o = null != t.data && 0 === t.data.indexOf(a.domain), s = null != t.dataSrc && 0 === t.dataSrc.indexOf(a.domain);
                        o ? r(a, n, t.data, e) : s && r(a, n, t.dataSrc, e);
                    }), s.forEach(function(e) {
                        var t = {};
                        try {
                            t.src = e.getAttribute("src"), t.dataSrc = e.getAttribute(F.vars.dataAttr), t.rendered = e.getAttribute("data-holder-rendered");
                        } catch (i) {}
                        var o = null != t.src, s = null != t.dataSrc && 0 === t.dataSrc.indexOf(a.domain), l = null != t.rendered && "true" == t.rendered;
                        o ? 0 === t.src.indexOf(a.domain) ? r(a, n, t.src, e) : s && (l ? r(a, n, t.dataSrc, e) : !function(e, t, n, i, o) {
                            w.imageExists(e, function(e) {
                                e || r(t, n, i, o);
                            });
                        }(t.src, a, n, t.dataSrc, e)) : s && r(a, n, t.dataSrc, e);
                    }), this;
                }
            }, F = {
                settings: {
                    domain: "holder.js",
                    images: "img",
                    objects: "object",
                    bgnodes: "body .holderjs",
                    stylenodes: "head link.holderjs",
                    themes: {
                        gray: {
                            bg: "#EEEEEE",
                            fg: "#AAAAAA"
                        },
                        social: {
                            bg: "#3a5a97",
                            fg: "#FFFFFF"
                        },
                        industrial: {
                            bg: "#434A52",
                            fg: "#C2F200"
                        },
                        sky: {
                            bg: "#0D8FDB",
                            fg: "#FFFFFF"
                        },
                        vine: {
                            bg: "#39DBAC",
                            fg: "#1E292C"
                        },
                        lava: {
                            bg: "#F8591A",
                            fg: "#1C2846"
                        }
                    }
                },
                defaults: {
                    size: 10,
                    units: "pt",
                    scale: 1 / 16
                }
            }, z = function() {
                var e = null, t = null, n = null;
                return function(r) {
                    var i = r.root;
                    if (F.setup.supportsSVG) {
                        var o = !1, a = function(e) {
                            return document.createTextNode(e);
                        };
                        (null == e || e.parentNode !== document.body) && (o = !0), e = b.initSVG(e, i.properties.width, i.properties.height), 
                        e.style.display = "block", o && (t = x.newEl("text", j), n = a(null), x.setAttr(t, {
                            x: 0
                        }), t.appendChild(n), e.appendChild(t), document.body.appendChild(e), e.style.visibility = "hidden", 
                        e.style.position = "absolute", e.style.top = "-100%", e.style.left = "-100%");
                        var s = i.children.holderTextGroup, l = s.properties;
                        x.setAttr(t, {
                            y: l.font.size,
                            style: w.cssProps({
                                "font-weight": l.font.weight,
                                "font-size": l.font.size + l.font.units,
                                "font-family": l.font.family
                            })
                        }), n.nodeValue = l.text;
                        var h = t.getBBox(), u = Math.ceil(h.width / i.properties.width), d = l.text.split(" "), c = l.text.match(/\\n/g);
                        u += null == c ? 0 : c.length, n.nodeValue = l.text.replace(/[ ]+/g, "");
                        var f = t.getComputedTextLength(), p = h.width - f, g = Math.round(p / Math.max(1, d.length - 1)), m = [];
                        if (u > 1) {
                            n.nodeValue = "";
                            for (var v = 0; v < d.length; v++) if (0 !== d[v].length) {
                                n.nodeValue = w.decodeHtmlEntity(d[v]);
                                var y = t.getBBox();
                                m.push({
                                    text: d[v],
                                    width: y.width
                                });
                            }
                        }
                        return e.style.display = "none", {
                            spaceWidth: g,
                            lineCount: u,
                            boundingBox: h,
                            words: m
                        };
                    }
                    return !1;
                };
            }();
            for (var D in F.flags) F.flags.hasOwnProperty(D) && (F.flags[D].match = function(e) {
                return e.match(this.regex);
            });
            F.setup = {
                renderer: "html",
                debounce: 100,
                ratio: 1,
                supportsCanvas: !1,
                supportsSVG: !1,
                lineWrapRatio: .9,
                dataAttr: "data-src",
                renderers: [ "html", "canvas", "svg" ]
            }, F.vars = {
                preempted: !1,
                resizableImages: [],
                invisibleImages: {},
                invisibleId: 0,
                visibilityCheckStarted: !1,
                debounceTimer: null,
                cache: {}
            }, function() {
                var e = x.newEl("canvas");
                e.getContext && -1 != e.toDataURL("image/png").indexOf("data:image/png") && (F.setup.renderer = "canvas", 
                F.setup.supportsCanvas = !0), document.createElementNS && document.createElementNS(j, "svg").createSVGRect && (F.setup.renderer = "svg", 
                F.setup.supportsSVG = !0);
            }(), c(), m && m(function() {
                F.vars.preempted || O.run(), t.addEventListener ? (t.addEventListener("resize", g, !1), 
                t.addEventListener("orientationchange", g, !1)) : t.attachEvent("onresize", g), 
                "object" == typeof t.Turbolinks && t.document.addEventListener("page:change", function() {
                    O.run();
                });
            }), e.exports = O;
        }).call(t, function() {
            return this;
        }());
    }, function(e, t) {
        function n(e) {
            function t(e) {
                if (!x) {
                    if (!a.body) return i(t);
                    for (x = !0; e = S.shift(); ) i(e);
                }
            }
            function n(e) {
                (w || e.type === l || a[c] === d) && (r(), t());
            }
            function r() {
                w ? (a[y](m, n, h), e[y](l, n, h)) : (a[p](v, n), e[p](u, n));
            }
            function i(e, t) {
                setTimeout(e, +t >= 0 ? t : 1);
            }
            function o(e) {
                x ? i(e) : S.push(e);
            }
            null == document.readyState && document.addEventListener && (document.addEventListener("DOMContentLoaded", function C() {
                document.removeEventListener("DOMContentLoaded", C, !1), document.readyState = "complete";
            }, !1), document.readyState = "loading");
            var a = e.document, s = a.documentElement, l = "load", h = !1, u = "on" + l, d = "complete", c = "readyState", f = "attachEvent", p = "detachEvent", g = "addEventListener", m = "DOMContentLoaded", v = "onreadystatechange", y = "removeEventListener", w = g in a, b = h, x = h, S = [];
            if (a[c] === d) i(t); else if (w) a[g](m, n, h), e[g](l, n, h); else {
                a[f](v, n), e[f](u, n);
                try {
                    b = null == e.frameElement && s;
                } catch (A) {}
                b && b.doScroll && !function E() {
                    if (!x) {
                        try {
                            b.doScroll("left");
                        } catch (e) {
                            return i(E, 50);
                        }
                        r(), t();
                    }
                }();
            }
            return o.version = "1.4.0", o.isReady = function() {
                return x;
            }, o;
        }
        e.exports = "undefined" != typeof window && n(window);
    }, function(e, t, n) {
        var r = encodeURIComponent, i = decodeURIComponent, o = n(4), a = n(5), s = /(\w+)\[(\d+)\]/, l = /\w+\.\w+/;
        t.parse = function(e) {
            if ("string" != typeof e) return {};
            if (e = o(e), "" === e) return {};
            "?" === e.charAt(0) && (e = e.slice(1));
            for (var t = {}, n = e.split("&"), r = 0; r < n.length; r++) {
                var a, h, u, d = n[r].split("="), c = i(d[0]);
                if (a = s.exec(c)) t[a[1]] = t[a[1]] || [], t[a[1]][a[2]] = i(d[1]); else if (a = l.test(c)) {
                    for (a = c.split("."), h = t; a.length; ) if (u = a.shift(), u.length) {
                        if (h[u]) {
                            if (h[u] && "object" != typeof h[u]) break;
                        } else h[u] = {};
                        a.length || (h[u] = i(d[1])), h = h[u];
                    }
                } else t[d[0]] = null == d[1] ? "" : i(d[1]);
            }
            return t;
        }, t.stringify = function(e) {
            if (!e) return "";
            var t = [];
            for (var n in e) {
                var i = e[n];
                if ("array" != a(i)) t.push(r(n) + "=" + r(e[n])); else for (var o = 0; o < i.length; ++o) t.push(r(n + "[" + o + "]") + "=" + r(i[o]));
            }
            return t.join("&");
        };
    }, function(e, t) {
        function n(e) {
            return e.replace(/^\s*|\s*$/g, "");
        }
        t = e.exports = n, t.left = function(e) {
            return e.replace(/^\s*/, "");
        }, t.right = function(e) {
            return e.replace(/\s*$/, "");
        };
    }, function(e, t) {
        var n = Object.prototype.toString;
        e.exports = function(e) {
            switch (n.call(e)) {
              case "[object Date]":
                return "date";

              case "[object RegExp]":
                return "regexp";

              case "[object Arguments]":
                return "arguments";

              case "[object Array]":
                return "array";

              case "[object Error]":
                return "error";
            }
            return null === e ? "null" : void 0 === e ? "undefined" : e !== e ? "nan" : e && 1 === e.nodeType ? "element" : (e = e.valueOf ? e.valueOf() : Object.prototype.valueOf.apply(e), 
            typeof e);
        };
    }, function(e, t) {
        var n = function(e) {
            function t(e, t) {
                for (var n in t) e[n] = t[n];
                return e;
            }
            var n = 1, r = function(e) {
                n++, this.parent = null, this.children = {}, this.id = n, this.name = "n" + n, "undefined" != typeof e && (this.name = e), 
                this.x = this.y = this.z = 0, this.width = this.height = 0;
            };
            r.prototype.resize = function(e, t) {
                null != e && (this.width = e), null != t && (this.height = t);
            }, r.prototype.moveTo = function(e, t, n) {
                this.x = null != e ? e : this.x, this.y = null != t ? t : this.y, this.z = null != n ? n : this.z;
            }, r.prototype.add = function(e) {
                var t = e.name;
                if ("undefined" != typeof this.children[t]) throw "SceneGraph: child already exists: " + t;
                this.children[t] = e, e.parent = this;
            };
            var i = function() {
                r.call(this, "root"), this.properties = e;
            };
            i.prototype = new r();
            var o = function(e, n) {
                if (r.call(this, e), this.properties = {
                    fill: "#000000"
                }, "undefined" != typeof n) t(this.properties, n); else if ("undefined" != typeof e && "string" != typeof e) throw "SceneGraph: invalid node name";
            };
            o.prototype = new r();
            var a = function() {
                o.apply(this, arguments), this.type = "group";
            };
            a.prototype = new o();
            var s = function() {
                o.apply(this, arguments), this.type = "rect";
            };
            s.prototype = new o();
            var l = function(e) {
                o.call(this), this.type = "text", this.properties.text = e;
            };
            l.prototype = new o();
            var h = new i();
            return this.Shape = {
                Rect: s,
                Text: l,
                Group: a
            }, this.root = h, this;
        };
        e.exports = n;
    }, function(e, t) {
        (function(e) {
            t.extend = function(e, t) {
                var n = {};
                for (var r in e) e.hasOwnProperty(r) && (n[r] = e[r]);
                if (null != t) for (var i in t) t.hasOwnProperty(i) && (n[i] = t[i]);
                return n;
            }, t.cssProps = function(e) {
                var t = [];
                for (var n in e) e.hasOwnProperty(n) && t.push(n + ":" + e[n]);
                return t.join(";");
            }, t.encodeHtmlEntity = function(e) {
                for (var t = [], n = 0, r = e.length - 1; r >= 0; r--) n = e.charCodeAt(r), n > 128 ? t.unshift([ "&#", n, ";" ].join("")) : t.unshift(e[r]);
                return t.join("");
            }, t.imageExists = function(e, t) {
                var n = new Image();
                n.onerror = function() {
                    t.call(this, !1);
                }, n.onload = function() {
                    t.call(this, !0);
                }, n.src = e;
            }, t.decodeHtmlEntity = function(e) {
                return e.replace(/&#(\d+);/g, function(e, t) {
                    return String.fromCharCode(t);
                });
            }, t.dimensionCheck = function(e) {
                var t = {
                    height: e.clientHeight,
                    width: e.clientWidth
                };
                return t.height && t.width ? t : !1;
            }, t.truthy = function(e) {
                return "string" == typeof e ? "true" === e || "yes" === e || "1" === e || "on" === e || "✓" === e : !!e;
            }, t.parseColor = function(e) {
                var t, n = /(^(?:#?)[0-9a-f]{6}$)|(^(?:#?)[0-9a-f]{3}$)/i, r = /^rgb\((\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)$/, i = /^rgba\((\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(0\.\d{1,}|1)\)$/, o = e.match(n);
                return null !== o ? (t = o[1] || o[2], "#" !== t[0] ? "#" + t : t) : (o = e.match(r), 
                null !== o ? t = "rgb(" + o.slice(1).join(",") + ")" : (o = e.match(i), null !== o ? t = "rgba(" + o.slice(1).join(",") + ")" : null));
            }, t.canvasRatio = function() {
                var t = 1, n = 1;
                if (e.document) {
                    var r = e.document.createElement("canvas");
                    if (r.getContext) {
                        var i = r.getContext("2d");
                        t = e.devicePixelRatio || 1, n = i.webkitBackingStorePixelRatio || i.mozBackingStorePixelRatio || i.msBackingStorePixelRatio || i.oBackingStorePixelRatio || i.backingStorePixelRatio || 1;
                    }
                }
                return t / n;
            };
        }).call(t, function() {
            return this;
        }());
    }, function(e, t, n) {
        (function(e) {
            var r = n(9), i = "http://www.w3.org/2000/svg", o = 8;
            t.initSVG = function(e, t, n) {
                var a, s, l = !1;
                e && e.querySelector ? (s = e.querySelector("style"), null === s && (l = !0)) : (e = r.newEl("svg", i), 
                l = !0), l && (a = r.newEl("defs", i), s = r.newEl("style", i), r.setAttr(s, {
                    type: "text/css"
                }), a.appendChild(s), e.appendChild(a)), e.webkitMatchesSelector && e.setAttribute("xmlns", i);
                for (var h = 0; h < e.childNodes.length; h++) e.childNodes[h].nodeType === o && e.removeChild(e.childNodes[h]);
                for (;s.childNodes.length; ) s.removeChild(s.childNodes[0]);
                return r.setAttr(e, {
                    width: t,
                    height: n,
                    viewBox: "0 0 " + t + " " + n,
                    preserveAspectRatio: "none"
                }), e;
            }, t.svgStringToDataURI = function() {
                var t = "data:image/svg+xml;charset=UTF-8,", n = "data:image/svg+xml;charset=UTF-8;base64,";
                return function(r, i) {
                    return i ? n + btoa(e.unescape(encodeURIComponent(r))) : t + encodeURIComponent(r);
                };
            }(), t.serializeSVG = function(t, n) {
                if (e.XMLSerializer) {
                    var i = new XMLSerializer(), o = "", a = n.stylesheets;
                    if (n.svgXMLStylesheet) {
                        for (var s = r.createXML(), l = a.length - 1; l >= 0; l--) {
                            var h = s.createProcessingInstruction("xml-stylesheet", 'href="' + a[l] + '" rel="stylesheet"');
                            s.insertBefore(h, s.firstChild);
                        }
                        s.removeChild(s.documentElement), o = i.serializeToString(s);
                    }
                    var u = i.serializeToString(t);
                    return u = u.replace(/\&amp;(\#[0-9]{2,}\;)/g, "&$1"), o + u;
                }
            };
        }).call(t, function() {
            return this;
        }());
    }, function(e, t) {
        (function(e) {
            t.newEl = function(t, n) {
                return e.document ? null == n ? e.document.createElement(t) : e.document.createElementNS(n, t) : void 0;
            }, t.setAttr = function(e, t) {
                for (var n in t) e.setAttribute(n, t[n]);
            }, t.createXML = function() {
                return e.DOMParser ? new DOMParser().parseFromString("<xml />", "application/xml") : void 0;
            }, t.getNodeArray = function(t) {
                var n = null;
                return "string" == typeof t ? n = document.querySelectorAll(t) : e.NodeList && t instanceof e.NodeList ? n = t : e.Node && t instanceof e.Node ? n = [ t ] : e.HTMLCollection && t instanceof e.HTMLCollection ? n = t : t instanceof Array ? n = t : null === t && (n = []), 
                n = Array.prototype.slice.call(n);
            };
        }).call(t, function() {
            return this;
        }());
    }, function(e, t) {
        var n = function(e, t) {
            "string" == typeof e && (this.original = e, "#" === e.charAt(0) && (e = e.slice(1)), 
            /[^a-f0-9]+/i.test(e) || (3 === e.length && (e = e.replace(/./g, "$&$&")), 6 === e.length && (this.alpha = 1, 
            t && t.alpha && (this.alpha = t.alpha), this.set(parseInt(e, 16)))));
        };
        n.rgb2hex = function(e, t, n) {
            function r(e) {
                var t = (0 | e).toString(16);
                return 16 > e && (t = "0" + t), t;
            }
            return [ e, t, n ].map(r).join("");
        }, n.hsl2rgb = function(e, t, n) {
            var r = e / 60, i = (1 - Math.abs(2 * n - 1)) * t, o = i * (1 - Math.abs(parseInt(r) % 2 - 1)), a = n - i / 2, s = 0, l = 0, h = 0;
            return r >= 0 && 1 > r ? (s = i, l = o) : r >= 1 && 2 > r ? (s = o, l = i) : r >= 2 && 3 > r ? (l = i, 
            h = o) : r >= 3 && 4 > r ? (l = o, h = i) : r >= 4 && 5 > r ? (s = o, h = i) : r >= 5 && 6 > r && (s = i, 
            h = o), s += a, l += a, h += a, s = parseInt(255 * s), l = parseInt(255 * l), h = parseInt(255 * h), 
            [ s, l, h ];
        }, n.prototype.set = function(e) {
            this.raw = e;
            var t = (16711680 & this.raw) >> 16, n = (65280 & this.raw) >> 8, r = 255 & this.raw, i = .2126 * t + .7152 * n + .0722 * r, o = -.09991 * t - .33609 * n + .436 * r, a = .615 * t - .55861 * n - .05639 * r;
            return this.rgb = {
                r: t,
                g: n,
                b: r
            }, this.yuv = {
                y: i,
                u: o,
                v: a
            }, this;
        }, n.prototype.lighten = function(e) {
            var t = Math.min(1, Math.max(0, Math.abs(e))) * (0 > e ? -1 : 1), r = 255 * t | 0, i = Math.min(255, Math.max(0, this.rgb.r + r)), o = Math.min(255, Math.max(0, this.rgb.g + r)), a = Math.min(255, Math.max(0, this.rgb.b + r)), s = n.rgb2hex(i, o, a);
            return new n(s);
        }, n.prototype.toHex = function(e) {
            return (e ? "#" : "") + this.raw.toString(16);
        }, n.prototype.lighterThan = function(e) {
            return e instanceof n || (e = new n(e)), this.yuv.y > e.yuv.y;
        }, n.prototype.blendAlpha = function(e) {
            e instanceof n || (e = new n(e));
            var t = e, r = this, i = t.alpha * t.rgb.r + (1 - t.alpha) * r.rgb.r, o = t.alpha * t.rgb.g + (1 - t.alpha) * r.rgb.g, a = t.alpha * t.rgb.b + (1 - t.alpha) * r.rgb.b;
            return new n(n.rgb2hex(i, o, a));
        }, e.exports = n;
    }, function(e, t) {
        e.exports = {
            version: "2.9.0",
            svg_ns: "http://www.w3.org/2000/svg"
        };
    }, function(e, t, n) {
        function r(e, t) {
            return d.element({
                tag: t,
                width: e.width,
                height: e.height,
                fill: e.properties.fill
            });
        }
        function i(e) {
            return h.cssProps({
                fill: e.fill,
                "font-weight": e.font.weight,
                "font-family": e.font.family + ", monospace",
                "font-size": e.font.size + e.font.units
            });
        }
        function o(e, t, n) {
            var r = n / 2;
            return [ "M", r, r, "H", e - r, "V", t - r, "H", r, "V", 0, "M", 0, r, "L", e, t - r, "M", 0, t - r, "L", e, r ].join(" ");
        }
        var a = n(13), s = n(8), l = n(11), h = n(7), u = l.svg_ns, d = {
            element: function(e) {
                var t = e.tag, n = e.content || "";
                return delete e.tag, delete e.content, [ t, n, e ];
            }
        };
        e.exports = function(e, t) {
            var n = t.engineSettings, l = n.stylesheets, h = l.map(function(e) {
                return '<?xml-stylesheet rel="stylesheet" href="' + e + '"?>';
            }).join("\n"), c = "holder_" + Number(new Date()).toString(16), f = e.root, p = f.children.holderTextGroup, g = "#" + c + " text { " + i(p.properties) + " } ";
            p.y += .8 * p.textPositionData.boundingBox.height;
            var m = [];
            Object.keys(p.children).forEach(function(e) {
                var t = p.children[e];
                Object.keys(t.children).forEach(function(e) {
                    var n = t.children[e], r = p.x + t.x + n.x, i = p.y + t.y + n.y, o = d.element({
                        tag: "text",
                        content: n.properties.text,
                        x: r,
                        y: i
                    });
                    m.push(o);
                });
            });
            var v = d.element({
                tag: "g",
                content: m
            }), y = null;
            if (f.children.holderBg.properties.outline) {
                var w = f.children.holderBg.properties.outline;
                y = d.element({
                    tag: "path",
                    d: o(f.children.holderBg.width, f.children.holderBg.height, w.width),
                    "stroke-width": w.width,
                    stroke: w.fill,
                    fill: "none"
                });
            }
            var b = r(f.children.holderBg, "rect"), x = [];
            x.push(b), w && x.push(y), x.push(v);
            var S = d.element({
                tag: "g",
                id: c,
                content: x
            }), A = d.element({
                tag: "style",
                content: g,
                type: "text/css"
            }), C = d.element({
                tag: "defs",
                content: A
            }), E = d.element({
                tag: "svg",
                content: [ C, S ],
                width: f.properties.width,
                height: f.properties.height,
                xmlns: u,
                viewBox: [ 0, 0, f.properties.width, f.properties.height ].join(" "),
                preserveAspectRatio: "none"
            }), T = a(E);
            T = h + T[0];
            var k = s.svgStringToDataURI(T, "background" === t.mode);
            return k;
        };
    }, function(e, t, n) {
        n(14);
        e.exports = function r(e, t, n) {
            "use strict";
            function i(e) {
                var t = e.match(/^\w+/), r = {
                    tag: t ? t[0] : "div",
                    attr: {},
                    children: []
                }, i = e.match(/#([\w-]+)/), o = e.match(/\$([\w-]+)/), a = e.match(/\.[\w-]+/g);
                return i && (r.attr.id = i[1], n[i[1]] = r), o && (n[o[1]] = r), a && (r.attr["class"] = a.join(" ").replace(/\./g, "")), 
                e.match(/&$/g) && (f = !1), r;
            }
            function o(e, t) {
                return null !== t && t !== !1 && void 0 !== t ? "string" != typeof t && "object" != typeof t ? String(t) : t : void 0;
            }
            function a(e) {
                return String(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;");
            }
            function s(e) {
                return String(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&apos;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
            }
            var l, h, u, d, c = 1, f = !0;
            if (n = n || {}, "string" == typeof e[0]) e[0] = i(e[0]); else {
                if (!Array.isArray(e[0])) throw new Error("First element of array must be a string, or an array and not " + JSON.stringify(e[0]));
                c = 0;
            }
            for (;c < e.length; c++) {
                if (e[c] === !1 || null === e[c]) {
                    e[0] = !1;
                    break;
                }
                if (void 0 !== e[c] && e[c] !== !0) if ("string" == typeof e[c]) f && (e[c] = s(e[c])), 
                e[0].children.push(e[c]); else if ("number" == typeof e[c]) e[0].children.push(e[c]); else if (Array.isArray(e[c])) {
                    if (Array.isArray(e[c][0])) {
                        if (e[c].reverse().forEach(function(t) {
                            e.splice(c + 1, 0, t);
                        }), 0 !== c) continue;
                        c++;
                    }
                    r(e[c], t, n), e[c][0] && e[0].children.push(e[c][0]);
                } else if ("function" == typeof e[c]) u = e[c]; else {
                    if ("object" != typeof e[c]) throw new TypeError('"' + e[c] + '" is not allowed as a value.');
                    for (h in e[c]) e[c].hasOwnProperty(h) && null !== e[c][h] && e[c][h] !== !1 && ("style" === h && "object" == typeof e[c][h] ? e[0].attr[h] = JSON.stringify(e[c][h], o).slice(2, -2).replace(/","/g, ";").replace(/":"/g, ":").replace(/\\"/g, "'") : e[0].attr[h] = e[c][h]);
                }
            }
            if (e[0] !== !1) {
                l = "<" + e[0].tag;
                for (d in e[0].attr) e[0].attr.hasOwnProperty(d) && (l += " " + d + '="' + a(e[0].attr[d] || "") + '"');
                l += ">", e[0].children.forEach(function(e) {
                    l += e;
                }), l += "</" + e[0].tag + ">", e[0] = l;
            }
            return n[0] = e[0], u && u(e[0]), n;
        };
    }, function(e, t) {
        function n(e) {
            return String(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        }
        e.exports = n;
    }, function(e, t, n) {
        var r = n(9), i = n(7);
        e.exports = function() {
            var e = r.newEl("canvas"), t = null;
            return function(n) {
                null == t && (t = e.getContext("2d"));
                var r = i.canvasRatio(), o = n.root;
                e.width = r * o.properties.width, e.height = r * o.properties.height, t.textBaseline = "middle";
                var a = o.children.holderBg, s = r * a.width, l = r * a.height, h = 2, u = h / 2;
                t.fillStyle = a.properties.fill, t.fillRect(0, 0, s, l), a.properties.outline && (t.strokeStyle = a.properties.outline.fill, 
                t.lineWidth = a.properties.outline.width, t.moveTo(u, u), t.lineTo(s - u, u), t.lineTo(s - u, l - u), 
                t.lineTo(u, l - u), t.lineTo(u, u), t.moveTo(0, u), t.lineTo(s, l - u), t.moveTo(0, l - u), 
                t.lineTo(s, u), t.stroke());
                var d = o.children.holderTextGroup;
                t.font = d.properties.font.weight + " " + r * d.properties.font.size + d.properties.font.units + " " + d.properties.font.family + ", monospace", 
                t.fillStyle = d.properties.fill;
                for (var c in d.children) {
                    var f = d.children[c];
                    for (var p in f.children) {
                        var g = f.children[p], m = r * (d.x + f.x + g.x), v = r * (d.y + f.y + g.y + d.properties.leading / 2);
                        t.fillText(g.properties.text, m, v);
                    }
                }
                return e.toDataURL("image/png");
            };
        }();
    } ]);
}), function(e, t) {
    t && (Holder = e.Holder);
}(this, "undefined" != typeof Meteor && "undefined" != typeof Package);

/*! tether 1.1.0 */
!function(t, e) {
    "function" == typeof define && define.amd ? define(e) : "object" == typeof exports ? module.exports = e(require, exports, module) : t.Tether = e();
}(this, function(t, e, o) {
    "use strict";
    function i(t, e) {
        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    }
    function n(t) {
        var e = getComputedStyle(t), o = e.position;
        if ("fixed" === o) return t;
        for (var i = t; i = i.parentNode; ) {
            var n = void 0;
            try {
                n = getComputedStyle(i);
            } catch (r) {}
            if ("undefined" == typeof n || null === n) return i;
            var s = n.overflow, a = n.overflowX, f = n.overflowY;
            if (/(auto|scroll)/.test(s + f + a) && ("absolute" !== o || [ "relative", "absolute", "fixed" ].indexOf(n.position) >= 0)) return i;
        }
        return document.body;
    }
    function r(t) {
        var e = void 0;
        t === document ? (e = document, t = document.documentElement) : e = t.ownerDocument;
        var o = e.documentElement, i = {}, n = t.getBoundingClientRect();
        for (var r in n) i[r] = n[r];
        var s = x(e);
        return i.top -= s.top, i.left -= s.left, "undefined" == typeof i.width && (i.width = document.body.scrollWidth - i.left - i.right), 
        "undefined" == typeof i.height && (i.height = document.body.scrollHeight - i.top - i.bottom), 
        i.top = i.top - o.clientTop, i.left = i.left - o.clientLeft, i.right = e.body.clientWidth - i.width - i.left, 
        i.bottom = e.body.clientHeight - i.height - i.top, i;
    }
    function s(t) {
        return t.offsetParent || document.documentElement;
    }
    function a() {
        var t = document.createElement("div");
        t.style.width = "100%", t.style.height = "200px";
        var e = document.createElement("div");
        f(e.style, {
            position: "absolute",
            top: 0,
            left: 0,
            pointerEvents: "none",
            visibility: "hidden",
            width: "200px",
            height: "150px",
            overflow: "hidden"
        }), e.appendChild(t), document.body.appendChild(e);
        var o = t.offsetWidth;
        e.style.overflow = "scroll";
        var i = t.offsetWidth;
        o === i && (i = e.clientWidth), document.body.removeChild(e);
        var n = o - i;
        return {
            width: n,
            height: n
        };
    }
    function f() {
        var t = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0], e = [];
        return Array.prototype.push.apply(e, arguments), e.slice(1).forEach(function(e) {
            if (e) for (var o in e) ({}).hasOwnProperty.call(e, o) && (t[o] = e[o]);
        }), t;
    }
    function h(t, e) {
        if ("undefined" != typeof t.classList) e.split(" ").forEach(function(e) {
            e.trim() && t.classList.remove(e);
        }); else {
            var o = new RegExp("(^| )" + e.split(" ").join("|") + "( |$)", "gi"), i = u(t).replace(o, " ");
            p(t, i);
        }
    }
    function l(t, e) {
        if ("undefined" != typeof t.classList) e.split(" ").forEach(function(e) {
            e.trim() && t.classList.add(e);
        }); else {
            h(t, e);
            var o = u(t) + (" " + e);
            p(t, o);
        }
    }
    function d(t, e) {
        if ("undefined" != typeof t.classList) return t.classList.contains(e);
        var o = u(t);
        return new RegExp("(^| )" + e + "( |$)", "gi").test(o);
    }
    function u(t) {
        return t.className instanceof SVGAnimatedString ? t.className.baseVal : t.className;
    }
    function p(t, e) {
        t.setAttribute("class", e);
    }
    function c(t, e, o) {
        o.forEach(function(o) {
            -1 === e.indexOf(o) && d(t, o) && h(t, o);
        }), e.forEach(function(e) {
            d(t, e) || l(t, e);
        });
    }
    function i(t, e) {
        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    }
    function g(t, e) {
        var o = arguments.length <= 2 || void 0 === arguments[2] ? 1 : arguments[2];
        return t + o >= e && e >= t - o;
    }
    function m() {
        return "undefined" != typeof performance && "undefined" != typeof performance.now ? performance.now() : +new Date();
    }
    function v() {
        for (var t = {
            top: 0,
            left: 0
        }, e = arguments.length, o = Array(e), i = 0; e > i; i++) o[i] = arguments[i];
        return o.forEach(function(e) {
            var o = e.top, i = e.left;
            "string" == typeof o && (o = parseFloat(o, 10)), "string" == typeof i && (i = parseFloat(i, 10)), 
            t.top += o, t.left += i;
        }), t;
    }
    function y(t, e) {
        return "string" == typeof t.left && -1 !== t.left.indexOf("%") && (t.left = parseFloat(t.left, 10) / 100 * e.width), 
        "string" == typeof t.top && -1 !== t.top.indexOf("%") && (t.top = parseFloat(t.top, 10) / 100 * e.height), 
        t;
    }
    function b(t, e) {
        return "scrollParent" === e ? e = t.scrollParent : "window" === e && (e = [ pageXOffset, pageYOffset, innerWidth + pageXOffset, innerHeight + pageYOffset ]), 
        e === document && (e = e.documentElement), "undefined" != typeof e.nodeType && !function() {
            var t = r(e), o = t, i = getComputedStyle(e);
            e = [ o.left, o.top, t.width + o.left, t.height + o.top ], U.forEach(function(t, o) {
                t = t[0].toUpperCase() + t.substr(1), "Top" === t || "Left" === t ? e[o] += parseFloat(i["border" + t + "Width"]) : e[o] -= parseFloat(i["border" + t + "Width"]);
            });
        }(), e;
    }
    var w = function() {
        function t(t, e) {
            for (var o = 0; o < e.length; o++) {
                var i = e[o];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), 
                Object.defineProperty(t, i.key, i);
            }
        }
        return function(e, o, i) {
            return o && t(e.prototype, o), i && t(e, i), e;
        };
    }(), C = void 0;
    "undefined" == typeof C && (C = {
        modules: []
    });
    var O = function() {
        var t = 0;
        return function() {
            return ++t;
        };
    }(), E = {}, x = function(t) {
        var e = t._tetherZeroElement;
        "undefined" == typeof e && (e = t.createElement("div"), e.setAttribute("data-tether-id", O()), 
        f(e.style, {
            top: 0,
            left: 0,
            position: "absolute"
        }), t.body.appendChild(e), t._tetherZeroElement = e);
        var o = e.getAttribute("data-tether-id");
        if ("undefined" == typeof E[o]) {
            E[o] = {};
            var i = e.getBoundingClientRect();
            for (var n in i) E[o][n] = i[n];
            T(function() {
                delete E[o];
            });
        }
        return E[o];
    }, A = [], T = function(t) {
        A.push(t);
    }, S = function() {
        for (var t = void 0; t = A.pop(); ) t();
    }, W = function() {
        function t() {
            i(this, t);
        }
        return w(t, [ {
            key: "on",
            value: function(t, e, o) {
                var i = arguments.length <= 3 || void 0 === arguments[3] ? !1 : arguments[3];
                "undefined" == typeof this.bindings && (this.bindings = {}), "undefined" == typeof this.bindings[t] && (this.bindings[t] = []), 
                this.bindings[t].push({
                    handler: e,
                    ctx: o,
                    once: i
                });
            }
        }, {
            key: "once",
            value: function(t, e, o) {
                this.on(t, e, o, !0);
            }
        }, {
            key: "off",
            value: function(t, e) {
                if ("undefined" == typeof this.bindings || "undefined" == typeof this.bindings[t]) if ("undefined" == typeof e) delete this.bindings[t]; else for (var o = 0; o < this.bindings[t].length; ) this.bindings[t][o].handler === e ? this.bindings[t].splice(o, 1) : ++o;
            }
        }, {
            key: "trigger",
            value: function(t) {
                if ("undefined" != typeof this.bindings && this.bindings[t]) for (var e = 0; e < this.bindings[t].length; ) {
                    var o = this.bindings[t][e], i = o.handler, n = o.ctx, r = o.once, s = n;
                    "undefined" == typeof s && (s = this);
                    for (var a = arguments.length, f = Array(a > 1 ? a - 1 : 0), h = 1; a > h; h++) f[h - 1] = arguments[h];
                    i.apply(s, f), r ? this.bindings[t].splice(e, 1) : ++e;
                }
            }
        } ]), t;
    }();
    C.Utils = {
        getScrollParent: n,
        getBounds: r,
        getOffsetParent: s,
        extend: f,
        addClass: l,
        removeClass: h,
        hasClass: d,
        updateClasses: c,
        defer: T,
        flush: S,
        uniqueId: O,
        Evented: W,
        getScrollBarSize: a
    };
    var M = function() {
        function t(t, e) {
            var o = [], i = !0, n = !1, r = void 0;
            try {
                for (var s, a = t[Symbol.iterator](); !(i = (s = a.next()).done) && (o.push(s.value), 
                !e || o.length !== e); i = !0) ;
            } catch (f) {
                n = !0, r = f;
            } finally {
                try {
                    !i && a["return"] && a["return"]();
                } finally {
                    if (n) throw r;
                }
            }
            return o;
        }
        return function(e, o) {
            if (Array.isArray(e)) return e;
            if (Symbol.iterator in Object(e)) return t(e, o);
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
        };
    }(), w = function() {
        function t(t, e) {
            for (var o = 0; o < e.length; o++) {
                var i = e[o];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), 
                Object.defineProperty(t, i.key, i);
            }
        }
        return function(e, o, i) {
            return o && t(e.prototype, o), i && t(e, i), e;
        };
    }();
    if ("undefined" == typeof C) throw new Error("You must include the utils.js file before tether.js");
    var P = C.Utils, n = P.getScrollParent, r = P.getBounds, s = P.getOffsetParent, f = P.extend, l = P.addClass, h = P.removeClass, c = P.updateClasses, T = P.defer, S = P.flush, a = P.getScrollBarSize, k = function() {
        for (var t = document.createElement("div"), e = [ "transform", "webkitTransform", "OTransform", "MozTransform", "msTransform" ], o = 0; o < e.length; ++o) {
            var i = e[o];
            if (void 0 !== t.style[i]) return i;
        }
    }(), B = [], _ = function() {
        B.forEach(function(t) {
            t.position(!1);
        }), S();
    };
    !function() {
        var t = null, e = null, o = null, i = function n() {
            return "undefined" != typeof e && e > 16 ? (e = Math.min(e - 16, 250), void (o = setTimeout(n, 250))) : void ("undefined" != typeof t && m() - t < 10 || ("undefined" != typeof o && (clearTimeout(o), 
            o = null), t = m(), _(), e = m() - t));
        };
        [ "resize", "scroll", "touchmove" ].forEach(function(t) {
            window.addEventListener(t, i);
        });
    }();
    var z = {
        center: "center",
        left: "right",
        right: "left"
    }, F = {
        middle: "middle",
        top: "bottom",
        bottom: "top"
    }, L = {
        top: 0,
        left: 0,
        middle: "50%",
        center: "50%",
        bottom: "100%",
        right: "100%"
    }, Y = function(t, e) {
        var o = t.left, i = t.top;
        return "auto" === o && (o = z[e.left]), "auto" === i && (i = F[e.top]), {
            left: o,
            top: i
        };
    }, H = function(t) {
        var e = t.left, o = t.top;
        return "undefined" != typeof L[t.left] && (e = L[t.left]), "undefined" != typeof L[t.top] && (o = L[t.top]), 
        {
            left: e,
            top: o
        };
    }, X = function(t) {
        var e = t.split(" "), o = M(e, 2), i = o[0], n = o[1];
        return {
            top: i,
            left: n
        };
    }, j = X, N = function() {
        function t(e) {
            var o = this;
            i(this, t), this.position = this.position.bind(this), B.push(this), this.history = [], 
            this.setOptions(e, !1), C.modules.forEach(function(t) {
                "undefined" != typeof t.initialize && t.initialize.call(o);
            }), this.position();
        }
        return w(t, [ {
            key: "getClass",
            value: function() {
                var t = arguments.length <= 0 || void 0 === arguments[0] ? "" : arguments[0], e = this.options.classes;
                return "undefined" != typeof e && e[t] ? this.options.classes[t] : this.options.classPrefix ? this.options.classPrefix + "-" + t : t;
            }
        }, {
            key: "setOptions",
            value: function(t) {
                var e = this, o = arguments.length <= 1 || void 0 === arguments[1] ? !0 : arguments[1], i = {
                    offset: "0 0",
                    targetOffset: "0 0",
                    targetAttachment: "auto auto",
                    classPrefix: "tether"
                };
                this.options = f(i, t);
                var r = this.options, s = r.element, a = r.target, h = r.targetModifier;
                if (this.element = s, this.target = a, this.targetModifier = h, "viewport" === this.target ? (this.target = document.body, 
                this.targetModifier = "visible") : "scroll-handle" === this.target && (this.target = document.body, 
                this.targetModifier = "scroll-handle"), [ "element", "target" ].forEach(function(t) {
                    if ("undefined" == typeof e[t]) throw new Error("Tether Error: Both element and target must be defined");
                    "undefined" != typeof e[t].jquery ? e[t] = e[t][0] : "string" == typeof e[t] && (e[t] = document.querySelector(e[t]));
                }), l(this.element, this.getClass("element")), this.options.addTargetClasses !== !1 && l(this.target, this.getClass("target")), 
                !this.options.attachment) throw new Error("Tether Error: You must provide an attachment");
                this.targetAttachment = j(this.options.targetAttachment), this.attachment = j(this.options.attachment), 
                this.offset = X(this.options.offset), this.targetOffset = X(this.options.targetOffset), 
                "undefined" != typeof this.scrollParent && this.disable(), this.scrollParent = "scroll-handle" === this.targetModifier ? this.target : n(this.target), 
                this.options.enabled !== !1 && this.enable(o);
            }
        }, {
            key: "getTargetBounds",
            value: function() {
                if ("undefined" == typeof this.targetModifier) return r(this.target);
                if ("visible" === this.targetModifier) {
                    if (this.target === document.body) return {
                        top: pageYOffset,
                        left: pageXOffset,
                        height: innerHeight,
                        width: innerWidth
                    };
                    var t = r(this.target), e = {
                        height: t.height,
                        width: t.width,
                        top: t.top,
                        left: t.left
                    };
                    return e.height = Math.min(e.height, t.height - (pageYOffset - t.top)), e.height = Math.min(e.height, t.height - (t.top + t.height - (pageYOffset + innerHeight))), 
                    e.height = Math.min(innerHeight, e.height), e.height -= 2, e.width = Math.min(e.width, t.width - (pageXOffset - t.left)), 
                    e.width = Math.min(e.width, t.width - (t.left + t.width - (pageXOffset + innerWidth))), 
                    e.width = Math.min(innerWidth, e.width), e.width -= 2, e.top < pageYOffset && (e.top = pageYOffset), 
                    e.left < pageXOffset && (e.left = pageXOffset), e;
                }
                if ("scroll-handle" === this.targetModifier) {
                    var t = void 0, o = this.target;
                    o === document.body ? (o = document.documentElement, t = {
                        left: pageXOffset,
                        top: pageYOffset,
                        height: innerHeight,
                        width: innerWidth
                    }) : t = r(o);
                    var i = getComputedStyle(o), n = o.scrollWidth > o.clientWidth || [ i.overflow, i.overflowX ].indexOf("scroll") >= 0 || this.target !== document.body, s = 0;
                    n && (s = 15);
                    var a = t.height - parseFloat(i.borderTopWidth) - parseFloat(i.borderBottomWidth) - s, e = {
                        width: 15,
                        height: .975 * a * (a / o.scrollHeight),
                        left: t.left + t.width - parseFloat(i.borderLeftWidth) - 15
                    }, f = 0;
                    408 > a && this.target === document.body && (f = -11e-5 * Math.pow(a, 2) - .00727 * a + 22.58), 
                    this.target !== document.body && (e.height = Math.max(e.height, 24));
                    var h = this.target.scrollTop / (o.scrollHeight - a);
                    return e.top = h * (a - e.height - f) + t.top + parseFloat(i.borderTopWidth), this.target === document.body && (e.height = Math.max(e.height, 24)), 
                    e;
                }
            }
        }, {
            key: "clearCache",
            value: function() {
                this._cache = {};
            }
        }, {
            key: "cache",
            value: function(t, e) {
                return "undefined" == typeof this._cache && (this._cache = {}), "undefined" == typeof this._cache[t] && (this._cache[t] = e.call(this)), 
                this._cache[t];
            }
        }, {
            key: "enable",
            value: function() {
                var t = arguments.length <= 0 || void 0 === arguments[0] ? !0 : arguments[0];
                this.options.addTargetClasses !== !1 && l(this.target, this.getClass("enabled")), 
                l(this.element, this.getClass("enabled")), this.enabled = !0, this.scrollParent !== document && this.scrollParent.addEventListener("scroll", this.position), 
                t && this.position();
            }
        }, {
            key: "disable",
            value: function() {
                h(this.target, this.getClass("enabled")), h(this.element, this.getClass("enabled")), 
                this.enabled = !1, "undefined" != typeof this.scrollParent && this.scrollParent.removeEventListener("scroll", this.position);
            }
        }, {
            key: "destroy",
            value: function() {
                var t = this;
                this.disable(), B.forEach(function(e, o) {
                    return e === t ? void B.splice(o, 1) : void 0;
                });
            }
        }, {
            key: "updateAttachClasses",
            value: function(t, e) {
                var o = this;
                t = t || this.attachment, e = e || this.targetAttachment;
                var i = [ "left", "top", "bottom", "right", "middle", "center" ];
                "undefined" != typeof this._addAttachClasses && this._addAttachClasses.length && this._addAttachClasses.splice(0, this._addAttachClasses.length), 
                "undefined" == typeof this._addAttachClasses && (this._addAttachClasses = []);
                var n = this._addAttachClasses;
                t.top && n.push(this.getClass("element-attached") + "-" + t.top), t.left && n.push(this.getClass("element-attached") + "-" + t.left), 
                e.top && n.push(this.getClass("target-attached") + "-" + e.top), e.left && n.push(this.getClass("target-attached") + "-" + e.left);
                var r = [];
                i.forEach(function(t) {
                    r.push(o.getClass("element-attached") + "-" + t), r.push(o.getClass("target-attached") + "-" + t);
                }), T(function() {
                    "undefined" != typeof o._addAttachClasses && (c(o.element, o._addAttachClasses, r), 
                    o.options.addTargetClasses !== !1 && c(o.target, o._addAttachClasses, r), delete o._addAttachClasses);
                });
            }
        }, {
            key: "position",
            value: function() {
                var t = this, e = arguments.length <= 0 || void 0 === arguments[0] ? !0 : arguments[0];
                if (this.enabled) {
                    this.clearCache();
                    var o = Y(this.targetAttachment, this.attachment);
                    this.updateAttachClasses(this.attachment, o);
                    var i = this.cache("element-bounds", function() {
                        return r(t.element);
                    }), n = i.width, f = i.height;
                    if (0 === n && 0 === f && "undefined" != typeof this.lastSize) {
                        var h = this.lastSize;
                        n = h.width, f = h.height;
                    } else this.lastSize = {
                        width: n,
                        height: f
                    };
                    var l = this.cache("target-bounds", function() {
                        return t.getTargetBounds();
                    }), d = l, u = y(H(this.attachment), {
                        width: n,
                        height: f
                    }), p = y(H(o), d), c = y(this.offset, {
                        width: n,
                        height: f
                    }), g = y(this.targetOffset, d);
                    u = v(u, c), p = v(p, g);
                    for (var m = l.left + p.left - u.left, b = l.top + p.top - u.top, w = 0; w < C.modules.length; ++w) {
                        var O = C.modules[w], E = O.position.call(this, {
                            left: m,
                            top: b,
                            targetAttachment: o,
                            targetPos: l,
                            elementPos: i,
                            offset: u,
                            targetOffset: p,
                            manualOffset: c,
                            manualTargetOffset: g,
                            scrollbarSize: A,
                            attachment: this.attachment
                        });
                        if (E === !1) return !1;
                        "undefined" != typeof E && "object" == typeof E && (b = E.top, m = E.left);
                    }
                    var x = {
                        page: {
                            top: b,
                            left: m
                        },
                        viewport: {
                            top: b - pageYOffset,
                            bottom: pageYOffset - b - f + innerHeight,
                            left: m - pageXOffset,
                            right: pageXOffset - m - n + innerWidth
                        }
                    }, A = void 0;
                    return document.body.scrollWidth > window.innerWidth && (A = this.cache("scrollbar-size", a), 
                    x.viewport.bottom -= A.height), document.body.scrollHeight > window.innerHeight && (A = this.cache("scrollbar-size", a), 
                    x.viewport.right -= A.width), (-1 === [ "", "static" ].indexOf(document.body.style.position) || -1 === [ "", "static" ].indexOf(document.body.parentElement.style.position)) && (x.page.bottom = document.body.scrollHeight - b - f, 
                    x.page.right = document.body.scrollWidth - m - n), "undefined" != typeof this.options.optimizations && this.options.optimizations.moveElement !== !1 && "undefined" == typeof this.targetModifier && !function() {
                        var e = t.cache("target-offsetparent", function() {
                            return s(t.target);
                        }), o = t.cache("target-offsetparent-bounds", function() {
                            return r(e);
                        }), i = getComputedStyle(e), n = o, a = {};
                        if ([ "Top", "Left", "Bottom", "Right" ].forEach(function(t) {
                            a[t.toLowerCase()] = parseFloat(i["border" + t + "Width"]);
                        }), o.right = document.body.scrollWidth - o.left - n.width + a.right, o.bottom = document.body.scrollHeight - o.top - n.height + a.bottom, 
                        x.page.top >= o.top + a.top && x.page.bottom >= o.bottom && x.page.left >= o.left + a.left && x.page.right >= o.right) {
                            var f = e.scrollTop, h = e.scrollLeft;
                            x.offset = {
                                top: x.page.top - o.top + f - a.top,
                                left: x.page.left - o.left + h - a.left
                            };
                        }
                    }(), this.move(x), this.history.unshift(x), this.history.length > 3 && this.history.pop(), 
                    e && S(), !0;
                }
            }
        }, {
            key: "move",
            value: function(t) {
                var e = this;
                if ("undefined" != typeof this.element.parentNode) {
                    var o = {};
                    for (var i in t) {
                        o[i] = {};
                        for (var n in t[i]) {
                            for (var r = !1, a = 0; a < this.history.length; ++a) {
                                var h = this.history[a];
                                if ("undefined" != typeof h[i] && !g(h[i][n], t[i][n])) {
                                    r = !0;
                                    break;
                                }
                            }
                            r || (o[i][n] = !0);
                        }
                    }
                    var l = {
                        top: "",
                        left: "",
                        right: "",
                        bottom: ""
                    }, d = function(t, o) {
                        var i = "undefined" != typeof e.options.optimizations, n = i ? e.options.optimizations.gpu : null;
                        if (n !== !1) {
                            var r = void 0, s = void 0;
                            t.top ? (l.top = 0, r = o.top) : (l.bottom = 0, r = -o.bottom), t.left ? (l.left = 0, 
                            s = o.left) : (l.right = 0, s = -o.right), l[k] = "translateX(" + Math.round(s) + "px) translateY(" + Math.round(r) + "px)", 
                            "msTransform" !== k && (l[k] += " translateZ(0)");
                        } else t.top ? l.top = o.top + "px" : l.bottom = o.bottom + "px", t.left ? l.left = o.left + "px" : l.right = o.right + "px";
                    }, u = !1;
                    if ((o.page.top || o.page.bottom) && (o.page.left || o.page.right) ? (l.position = "absolute", 
                    d(o.page, t.page)) : (o.viewport.top || o.viewport.bottom) && (o.viewport.left || o.viewport.right) ? (l.position = "fixed", 
                    d(o.viewport, t.viewport)) : "undefined" != typeof o.offset && o.offset.top && o.offset.left ? !function() {
                        l.position = "absolute";
                        var i = e.cache("target-offsetparent", function() {
                            return s(e.target);
                        });
                        s(e.element) !== i && T(function() {
                            e.element.parentNode.removeChild(e.element), i.appendChild(e.element);
                        }), d(o.offset, t.offset), u = !0;
                    }() : (l.position = "absolute", d({
                        top: !0,
                        left: !0
                    }, t.page)), !u) {
                        for (var p = !0, c = this.element.parentNode; c && "BODY" !== c.tagName; ) {
                            if ("static" !== getComputedStyle(c).position) {
                                p = !1;
                                break;
                            }
                            c = c.parentNode;
                        }
                        p || (this.element.parentNode.removeChild(this.element), document.body.appendChild(this.element));
                    }
                    var m = {}, v = !1;
                    for (var n in l) {
                        var y = l[n], b = this.element.style[n];
                        "" !== b && "" !== y && [ "top", "left", "bottom", "right" ].indexOf(n) >= 0 && (b = parseFloat(b), 
                        y = parseFloat(y)), b !== y && (v = !0, m[n] = y);
                    }
                    v && T(function() {
                        f(e.element.style, m);
                    });
                }
            }
        } ]), t;
    }();
    N.modules = [], C.position = _;
    var R = f(N, C), M = function() {
        function t(t, e) {
            var o = [], i = !0, n = !1, r = void 0;
            try {
                for (var s, a = t[Symbol.iterator](); !(i = (s = a.next()).done) && (o.push(s.value), 
                !e || o.length !== e); i = !0) ;
            } catch (f) {
                n = !0, r = f;
            } finally {
                try {
                    !i && a["return"] && a["return"]();
                } finally {
                    if (n) throw r;
                }
            }
            return o;
        }
        return function(e, o) {
            if (Array.isArray(e)) return e;
            if (Symbol.iterator in Object(e)) return t(e, o);
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
        };
    }(), P = C.Utils, r = P.getBounds, f = P.extend, c = P.updateClasses, T = P.defer, U = [ "left", "top", "right", "bottom" ];
    C.modules.push({
        position: function(t) {
            var e = this, o = t.top, i = t.left, n = t.targetAttachment;
            if (!this.options.constraints) return !0;
            var s = this.cache("element-bounds", function() {
                return r(e.element);
            }), a = s.height, h = s.width;
            if (0 === h && 0 === a && "undefined" != typeof this.lastSize) {
                var l = this.lastSize;
                h = l.width, a = l.height;
            }
            var d = this.cache("target-bounds", function() {
                return e.getTargetBounds();
            }), u = d.height, p = d.width, g = [ this.getClass("pinned"), this.getClass("out-of-bounds") ];
            this.options.constraints.forEach(function(t) {
                var e = t.outOfBoundsClass, o = t.pinnedClass;
                e && g.push(e), o && g.push(o);
            }), g.forEach(function(t) {
                [ "left", "top", "right", "bottom" ].forEach(function(e) {
                    g.push(t + "-" + e);
                });
            });
            var m = [], v = f({}, n), y = f({}, this.attachment);
            return this.options.constraints.forEach(function(t) {
                var r = t.to, s = t.attachment, f = t.pin;
                "undefined" == typeof s && (s = "");
                var l = void 0, d = void 0;
                if (s.indexOf(" ") >= 0) {
                    var c = s.split(" "), g = M(c, 2);
                    d = g[0], l = g[1];
                } else l = d = s;
                var w = b(e, r);
                ("target" === d || "both" === d) && (o < w[1] && "top" === v.top && (o += u, v.top = "bottom"), 
                o + a > w[3] && "bottom" === v.top && (o -= u, v.top = "top")), "together" === d && (o < w[1] && "top" === v.top && ("bottom" === y.top ? (o += u, 
                v.top = "bottom", o += a, y.top = "top") : "top" === y.top && (o += u, v.top = "bottom", 
                o -= a, y.top = "bottom")), o + a > w[3] && "bottom" === v.top && ("top" === y.top ? (o -= u, 
                v.top = "top", o -= a, y.top = "bottom") : "bottom" === y.top && (o -= u, v.top = "top", 
                o += a, y.top = "top")), "middle" === v.top && (o + a > w[3] && "top" === y.top ? (o -= a, 
                y.top = "bottom") : o < w[1] && "bottom" === y.top && (o += a, y.top = "top"))), 
                ("target" === l || "both" === l) && (i < w[0] && "left" === v.left && (i += p, v.left = "right"), 
                i + h > w[2] && "right" === v.left && (i -= p, v.left = "left")), "together" === l && (i < w[0] && "left" === v.left ? "right" === y.left ? (i += p, 
                v.left = "right", i += h, y.left = "left") : "left" === y.left && (i += p, v.left = "right", 
                i -= h, y.left = "right") : i + h > w[2] && "right" === v.left ? "left" === y.left ? (i -= p, 
                v.left = "left", i -= h, y.left = "right") : "right" === y.left && (i -= p, v.left = "left", 
                i += h, y.left = "left") : "center" === v.left && (i + h > w[2] && "left" === y.left ? (i -= h, 
                y.left = "right") : i < w[0] && "right" === y.left && (i += h, y.left = "left"))), 
                ("element" === d || "both" === d) && (o < w[1] && "bottom" === y.top && (o += a, 
                y.top = "top"), o + a > w[3] && "top" === y.top && (o -= a, y.top = "bottom")), 
                ("element" === l || "both" === l) && (i < w[0] && "right" === y.left && (i += h, 
                y.left = "left"), i + h > w[2] && "left" === y.left && (i -= h, y.left = "right")), 
                "string" == typeof f ? f = f.split(",").map(function(t) {
                    return t.trim();
                }) : f === !0 && (f = [ "top", "left", "right", "bottom" ]), f = f || [];
                var C = [], O = [];
                o < w[1] && (f.indexOf("top") >= 0 ? (o = w[1], C.push("top")) : O.push("top")), 
                o + a > w[3] && (f.indexOf("bottom") >= 0 ? (o = w[3] - a, C.push("bottom")) : O.push("bottom")), 
                i < w[0] && (f.indexOf("left") >= 0 ? (i = w[0], C.push("left")) : O.push("left")), 
                i + h > w[2] && (f.indexOf("right") >= 0 ? (i = w[2] - h, C.push("right")) : O.push("right")), 
                C.length && !function() {
                    var t = void 0;
                    t = "undefined" != typeof e.options.pinnedClass ? e.options.pinnedClass : e.getClass("pinned"), 
                    m.push(t), C.forEach(function(e) {
                        m.push(t + "-" + e);
                    });
                }(), O.length && !function() {
                    var t = void 0;
                    t = "undefined" != typeof e.options.outOfBoundsClass ? e.options.outOfBoundsClass : e.getClass("out-of-bounds"), 
                    m.push(t), O.forEach(function(e) {
                        m.push(t + "-" + e);
                    });
                }(), (C.indexOf("left") >= 0 || C.indexOf("right") >= 0) && (y.left = v.left = !1), 
                (C.indexOf("top") >= 0 || C.indexOf("bottom") >= 0) && (y.top = v.top = !1), (v.top !== n.top || v.left !== n.left || y.top !== e.attachment.top || y.left !== e.attachment.left) && e.updateAttachClasses(y, v);
            }), T(function() {
                e.options.addTargetClasses !== !1 && c(e.target, m, g), c(e.element, m, g);
            }), {
                top: o,
                left: i
            };
        }
    });
    var P = C.Utils, r = P.getBounds, c = P.updateClasses, T = P.defer;
    C.modules.push({
        position: function(t) {
            var e = this, o = t.top, i = t.left, n = this.cache("element-bounds", function() {
                return r(e.element);
            }), s = n.height, a = n.width, f = this.getTargetBounds(), h = o + s, l = i + a, d = [];
            o <= f.bottom && h >= f.top && [ "left", "right" ].forEach(function(t) {
                var e = f[t];
                (e === i || e === l) && d.push(t);
            }), i <= f.right && l >= f.left && [ "top", "bottom" ].forEach(function(t) {
                var e = f[t];
                (e === o || e === h) && d.push(t);
            });
            var u = [], p = [], g = [ "left", "top", "right", "bottom" ];
            return u.push(this.getClass("abutted")), g.forEach(function(t) {
                u.push(e.getClass("abutted") + "-" + t);
            }), d.length && p.push(this.getClass("abutted")), d.forEach(function(t) {
                p.push(e.getClass("abutted") + "-" + t);
            }), T(function() {
                e.options.addTargetClasses !== !1 && c(e.target, p, u), c(e.element, p, u);
            }), !0;
        }
    });
    var M = function() {
        function t(t, e) {
            var o = [], i = !0, n = !1, r = void 0;
            try {
                for (var s, a = t[Symbol.iterator](); !(i = (s = a.next()).done) && (o.push(s.value), 
                !e || o.length !== e); i = !0) ;
            } catch (f) {
                n = !0, r = f;
            } finally {
                try {
                    !i && a["return"] && a["return"]();
                } finally {
                    if (n) throw r;
                }
            }
            return o;
        }
        return function(e, o) {
            if (Array.isArray(e)) return e;
            if (Symbol.iterator in Object(e)) return t(e, o);
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
        };
    }();
    return C.modules.push({
        position: function(t) {
            var e = t.top, o = t.left;
            if (this.options.shift) {
                var i = this.options.shift;
                "function" == typeof this.options.shift && (i = this.options.shift.call(this, {
                    top: e,
                    left: o
                }));
                var n = void 0, r = void 0;
                if ("string" == typeof i) {
                    i = i.split(" "), i[1] = i[1] || i[0];
                    var s = M(i, 2);
                    n = s[0], r = s[1], n = parseFloat(n, 10), r = parseFloat(r, 10);
                } else n = i.top, r = i.left;
                return e += n, o += r, {
                    top: e,
                    left: o
                };
            }
        }
    }), R;
});